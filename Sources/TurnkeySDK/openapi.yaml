openapi: 3.0.1
info:
  title: API Reference
  description: Review our [API Introduction](../api-introduction) to get started.
  contact: {}
  version: '1.0'
servers:
- url: https://api.turnkey.com/
security:
- ApiKeyAuth: []
- AuthenticatorAuth: []
tags:
- name: PublicApiService
- name: Organizations
  description: |-
    An Organization is the highest level of hierarchy in Turnkey. It can contain many Users, Private Keys, and Policies managed by a Root Quorum. The Root Quorum consists of a set of Users with a consensus threshold. This consensus threshold must be reached by Quorum members in order for any actions to take place.

    See [Root Quorum](../concepts/users/root-quorum) for more information
- name: Invitations
  description: |-
    Invitations allow you to invite Users into your Organization via email. Alternatively, Users can be added directly without an Invitation if their ApiKey or Authenticator credentials are known ahead of time.

    See [Users](./api#tag/Users) for more information
- name: Policies
  description: |-
    Policies allow for deep customization of the security of your Organization. They can be used to grant permissions or restrict usage of Users and Private Keys. The Policy Engine analyzes all of your Policies on each request to determine whether an Activity is allowed.

    See [Policy Overview](../managing-policies/overview) for more information
- name: Wallets
  description: |-
    Wallets contain collections of deterministically generated cryptographic public / private key pairs that share a common seed. Turnkey securely holds the common seed, but only you can access it. In most cases, Wallets should be preferred over Private Keys since they can be represented by a mnemonic phrase, used across a variety of cryptographic curves, and can derive many addresses.

    Derived addresses can be used to create digital signatures using the corresponding underlying private key. See [Signing](./api#tag/Signing) for more information
- name: Signing
  description: Signers allow you to create digital signatures. Signatures are used
    to validate the authenticity and integrity of a digital message. Turnkey makes
    it easy to produce signatures by allowing you to sign with an address. If Turnkey
    doesn't yet support an address format you need, you can generate and sign with
    the public key instead by using the address format `ADDRESS_FORMAT_COMPRESSED`.
- name: Private Keys
  description: |-
    Private Keys are cryptographic public / private key pairs that can be used for cryptocurrency needs or more generalized encryption. Turnkey securely holds all private key materials for you, but only you can access them.

    The Private Key ID or any derived address can be used to create digital signatures. See [Signing](./api#tag/Signing) for more information
- name: Private Key Tags
  description: Private Key Tags allow you to easily group and permission Private Keys
    through Policies.
- name: Users
  description: Users are responsible for any action taken within an Organization.
    They can have ApiKey or Auuthenticator credentials, allowing you to onboard teammates
    to the Organization, or create API-only Users to run as part of your infrastructure.
- name: User Tags
  description: User Key Tags allow you to easily group and permission Users through
    Policies.
- name: Authenticators
  description: Authenticators are WebAuthN hardware devices, such as a Macbook TouchID
    or Yubikey, that can be used to authenticate requests.
- name: API Keys
  description: |-
    API Keys are used to authenticate requests

    See our [CLI](https://github.com/tkhq/tkcli) for instructions on generating API Keys
- name: Activities
  description: |-
    Activities encapsulate all the possible actions that can be taken with Turnkey. Some examples include adding a new user, creating a private key, and signing a transaction.

    Activities that modify your Organization are processed asynchronously. To confirm processing is complete and retrieve the Activity results, these activities must be polled until that status has been updated to a finalized state: `COMPLETED` when the activity is successful or `FAILED` when the activity has failed
- name: Consensus
  description: |-
    Policies can enforce consensus requirements for Activities. For example, adding a new user requires two admins to approve the request.

    Activities that have been proposed, but don't yet meet the Consesnsus requirements will have the status: `REQUIRES_CONSENSUS`. Activities in this state can be approved or rejected using the unique fingerprint generated when an Activity is created.
paths:
  "/public/v1/query/get_activity":
    post:
      tags:
      - Activities
      summary: Get Activity
      description: Get details about an Activity
      operationId: PublicApiService_GetActivity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetActivityRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_api_key":
    post:
      tags:
      - API keys
      summary: Get API key
      description: Get details about an API key
      operationId: PublicApiService_GetApiKey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetApiKeyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetApiKeyResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_api_keys":
    post:
      tags:
      - API keys
      summary: Get API key
      description: Get details about API keys for a user
      operationId: PublicApiService_GetApiKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetApiKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetApiKeysResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_attestation":
    post:
      tags:
      - Attestation
      summary: Attestation
      description: Get the attestation document corresponding to an enclave.
      operationId: PublicApiService_GetAttestationDocument
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetAttestationDocumentRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetAttestationDocumentResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_authenticator":
    post:
      tags:
      - Authenticators
      summary: Get Authenticator
      description: Get details about an authenticator
      operationId: PublicApiService_GetAuthenticator
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetAuthenticatorRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetAuthenticatorResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_authenticators":
    post:
      tags:
      - Authenticators
      summary: Get Authenticators
      description: Get details about authenticators for a user
      operationId: PublicApiService_GetAuthenticators
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetAuthenticatorsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetAuthenticatorsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_oauth_providers":
    post:
      tags:
      - Users
      summary: Get Oauth providers
      description: Get details about Oauth providers for a user
      operationId: PublicApiService_GetOauthProviders
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetOauthProvidersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetOauthProvidersResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_organization":
    post:
      tags:
      - Organizations
      summary: Get Organization
      description: Get details about an Organization
      operationId: PublicApiService_GetOrganization
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetOrganizationRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetOrganizationResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_organization_configs":
    post:
      tags:
      - Organizations
      summary: Get Configs
      description: Get quorum settings and features for an organization
      operationId: PublicApiService_GetOrganizationConfigs
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetOrganizationConfigsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetOrganizationConfigsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_policy":
    post:
      tags:
      - Policies
      summary: Get Policy
      description: Get details about a Policy
      operationId: PublicApiService_GetPolicy
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetPolicyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetPolicyResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_private_key":
    post:
      tags:
      - Private Keys
      summary: Get Private Key
      description: Get details about a Private Key
      operationId: PublicApiService_GetPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetPrivateKeyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetPrivateKeyResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_user":
    post:
      tags:
      - Users
      summary: Get User
      description: Get details about a User
      operationId: PublicApiService_GetUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetUserRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetUserResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/get_wallet":
    post:
      tags:
      - Wallets
      summary: Get Wallet
      description: Get details about a Wallet
      operationId: PublicApiService_GetWallet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetWalletRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetWalletResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_activities":
    post:
      tags:
      - Activities
      summary: List Activities
      description: List all Activities within an Organization
      operationId: PublicApiService_GetActivities
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetActivitiesRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetActivitiesResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_policies":
    post:
      tags:
      - Policies
      summary: List Policies
      description: List all Policies within an Organization
      operationId: PublicApiService_GetPolicies
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetPoliciesRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetPoliciesResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_private_key_tags":
    post:
      tags:
      - Private Key Tags
      summary: List Private Key Tags
      description: List all Private Key Tags within an Organization
      operationId: PublicApiService_ListPrivateKeyTags
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ListPrivateKeyTagsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ListPrivateKeyTagsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_private_keys":
    post:
      tags:
      - Private Keys
      summary: List Private Keys
      description: List all Private Keys within an Organization
      operationId: PublicApiService_GetPrivateKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetPrivateKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetPrivateKeysResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_suborgs":
    post:
      tags:
      - Organizations
      summary: Get Suborgs
      description: Get all suborg IDs associated given a parent org ID and an optional
        filter.
      operationId: PublicApiService_GetSubOrgIds
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetSubOrgIdsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetSubOrgIdsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_user_tags":
    post:
      tags:
      - User Tags
      summary: List User Tags
      description: List all User Tags within an Organization
      operationId: PublicApiService_ListUserTags
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ListUserTagsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ListUserTagsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_users":
    post:
      tags:
      - Users
      summary: List Users
      description: List all Users within an Organization
      operationId: PublicApiService_GetUsers
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetUsersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetUsersResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_wallet_accounts":
    post:
      tags:
      - Wallets
      summary: List Wallets Accounts
      description: List all Accounts wirhin a Wallet
      operationId: PublicApiService_GetWalletAccounts
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetWalletAccountsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetWalletAccountsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/list_wallets":
    post:
      tags:
      - Wallets
      summary: List Wallets
      description: List all Wallets within an Organization
      operationId: PublicApiService_GetWallets
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetWalletsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetWalletsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/query/whoami":
    post:
      tags:
      - Sessions
      summary: Who am I?
      description: Get basic information about your current API or WebAuthN user and
        their organization. Affords Sub-Organization look ups via Parent Organization
        for WebAuthN or API key users.
      operationId: PublicApiService_GetWhoami
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1GetWhoamiRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1GetWhoamiResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/approve_activity":
    post:
      tags:
      - Consensus
      summary: Approve Activity
      description: Approve an Activity
      operationId: PublicApiService_ApproveActivity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ApproveActivityRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_api_keys":
    post:
      tags:
      - API Keys
      summary: Create API Keys
      description: Add api keys to an existing User
      operationId: PublicApiService_CreateApiKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateApiKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_api_only_users":
    post:
      tags:
      - Users
      summary: Create API-only Users
      description: Create API-only Users in an existing Organization
      operationId: PublicApiService_CreateApiOnlyUsers
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateApiOnlyUsersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_authenticators":
    post:
      tags:
      - Authenticators
      summary: Create Authenticators
      description: Create Authenticators to authenticate requests to Turnkey
      operationId: PublicApiService_CreateAuthenticators
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateAuthenticatorsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_invitations":
    post:
      tags:
      - Invitations
      summary: Create Invitations
      description: Create Invitations to join an existing Organization
      operationId: PublicApiService_CreateInvitations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateInvitationsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_oauth_providers":
    post:
      tags:
      - Users
      summary: Create Oauth Providers
      description: Creates Oauth providers for a specified user - BETA
      operationId: PublicApiService_CreateOauthProviders
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateOauthProvidersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_policies":
    post:
      tags:
      - Policies
      summary: Create Policies
      description: Create new Policies
      operationId: PublicApiService_CreatePolicies
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreatePoliciesRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_policy":
    post:
      tags:
      - Policies
      summary: Create Policy
      description: Create a new Policy
      operationId: PublicApiService_CreatePolicy
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreatePolicyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_private_key_tag":
    post:
      tags:
      - Private Key Tags
      summary: Create Private Key Tag
      description: Create a private key tag and add it to private keys.
      operationId: PublicApiService_CreatePrivateKeyTag
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreatePrivateKeyTagRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_private_keys":
    post:
      tags:
      - Private Keys
      summary: Create Private Keys
      description: Create new Private Keys
      operationId: PublicApiService_CreatePrivateKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreatePrivateKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_read_only_session":
    post:
      tags:
      - Sessions
      summary: Create Read Only Session
      description: Create a read only session for a user (valid for 1 hour)
      operationId: PublicApiService_CreateReadOnlySession
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateReadOnlySessionRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_read_write_session":
    post:
      tags:
      - Sessions
      summary: Create Read Write Session
      description: Create a read write session for a user
      operationId: PublicApiService_CreateReadWriteSession
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateReadWriteSessionRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_sub_organization":
    post:
      tags:
      - Organizations
      summary: Create Sub-Organization
      description: Create a new Sub-Organization
      operationId: PublicApiService_CreateSubOrganization
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateSubOrganizationRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_user_tag":
    post:
      tags:
      - User Tags
      summary: Create User Tag
      description: Create a user tag and add it to users.
      operationId: PublicApiService_CreateUserTag
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateUserTagRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_users":
    post:
      tags:
      - Users
      summary: Create Users
      description: Create Users in an existing Organization
      operationId: PublicApiService_CreateUsers
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateUsersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_wallet":
    post:
      tags:
      - Wallets
      summary: Create Wallet
      description: Create a Wallet and derive addresses
      operationId: PublicApiService_CreateWallet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateWalletRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/create_wallet_accounts":
    post:
      tags:
      - Wallets
      summary: Create Wallet Accounts
      description: Derive additional addresses using an existing wallet
      operationId: PublicApiService_CreateWalletAccounts
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1CreateWalletAccountsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_api_keys":
    post:
      tags:
      - API Keys
      summary: Delete API Keys
      description: Remove api keys from a User
      operationId: PublicApiService_DeleteApiKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteApiKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_authenticators":
    post:
      tags:
      - Authenticators
      summary: Delete Authenticators
      description: Remove authenticators from a User
      operationId: PublicApiService_DeleteAuthenticators
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteAuthenticatorsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_invitation":
    post:
      tags:
      - Invitations
      summary: Delete Invitation
      description: Delete an existing Invitation
      operationId: PublicApiService_DeleteInvitation
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteInvitationRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_oauth_providers":
    post:
      tags:
      - Users
      summary: Delete Oauth Providers
      description: Removes Oauth providers for a specified user - BETA
      operationId: PublicApiService_DeleteOauthProviders
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteOauthProvidersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_policy":
    post:
      tags:
      - Policies
      summary: Delete Policy
      description: Delete an existing Policy
      operationId: PublicApiService_DeletePolicy
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeletePolicyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_private_key_tags":
    post:
      tags:
      - Private Key Tags
      summary: Delete Private Key Tags
      description: Delete Private Key Tags within an Organization
      operationId: PublicApiService_DeletePrivateKeyTags
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeletePrivateKeyTagsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_private_keys":
    post:
      tags:
      - Private Keys
      summary: Delete Private Keys
      description: Deletes private keys for an organization
      operationId: PublicApiService_DeletePrivateKeys
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeletePrivateKeysRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_sub_organization":
    post:
      tags:
      - Organizations
      summary: Delete Sub Organization
      description: Deletes a sub organization
      operationId: PublicApiService_DeleteSubOrganization
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteSubOrganizationRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_user_tags":
    post:
      tags:
      - User Tags
      summary: Delete User Tags
      description: Delete User Tags within an Organization
      operationId: PublicApiService_DeleteUserTags
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteUserTagsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_users":
    post:
      tags:
      - Users
      summary: Delete Users
      description: Delete Users within an Organization
      operationId: PublicApiService_DeleteUsers
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteUsersRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/delete_wallets":
    post:
      tags:
      - Wallets
      summary: Delete Wallets
      description: Deletes wallets for an organization
      operationId: PublicApiService_DeleteWallets
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1DeleteWalletsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/email_auth":
    post:
      tags:
      - User Auth
      summary: Perform Email Auth
      description: Authenticate a user via Email
      operationId: PublicApiService_EmailAuth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1EmailAuthRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/export_private_key":
    post:
      tags:
      - Private Keys
      summary: Export Private Key
      description: Exports a Private Key
      operationId: PublicApiService_ExportPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ExportPrivateKeyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/export_wallet":
    post:
      tags:
      - Wallets
      summary: Export Wallet
      description: Exports a Wallet
      operationId: PublicApiService_ExportWallet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ExportWalletRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/export_wallet_account":
    post:
      tags:
      - Wallets
      summary: Export Wallet Account
      description: Exports a Wallet Account
      operationId: PublicApiService_ExportWalletAccount
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ExportWalletAccountRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/import_private_key":
    post:
      tags:
      - Private Keys
      summary: Import Private Key
      description: Imports a private key
      operationId: PublicApiService_ImportPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ImportPrivateKeyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/import_wallet":
    post:
      tags:
      - Wallets
      summary: Import Wallet
      description: Imports a wallet
      operationId: PublicApiService_ImportWallet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1ImportWalletRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/init_import_private_key":
    post:
      tags:
      - Private Keys
      summary: Init Import Private Key
      description: Initializes a new private key import
      operationId: PublicApiService_InitImportPrivateKey
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1InitImportPrivateKeyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/init_import_wallet":
    post:
      tags:
      - Wallets
      summary: Init Import Wallet
      description: Initializes a new wallet import
      operationId: PublicApiService_InitImportWallet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1InitImportWalletRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/init_otp_auth":
    post:
      tags:
      - Users
      summary: Init OTP auth
      description: Initiate an OTP auth activity
      operationId: PublicApiService_InitOtpAuth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1InitOtpAuthRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/init_user_email_recovery":
    post:
      tags:
      - User Recovery
      summary: Init Email Recovery
      description: Initializes a new email recovery
      operationId: PublicApiService_InitUserEmailRecovery
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1InitUserEmailRecoveryRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/oauth":
    post:
      tags:
      - Users
      summary: Oauth
      description: Authenticate a user with an Oidc token (Oauth) - BETA
      operationId: PublicApiService_Oauth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1OauthRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/otp_auth":
    post:
      tags:
      - Users
      summary: OTP auth
      description: Authenticate a user with an OTP code sent via email or SMS
      operationId: PublicApiService_OtpAuth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1OtpAuthRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/recover_user":
    post:
      tags:
      - User Recovery
      summary: Recover a user
      description: Completes the process of recovering a user by adding an authenticator
      operationId: PublicApiService_RecoverUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1RecoverUserRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/reject_activity":
    post:
      tags:
      - Consensus
      summary: Reject Activity
      description: Reject an Activity
      operationId: PublicApiService_RejectActivity
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1RejectActivityRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/remove_organization_feature":
    post:
      tags:
      - Features
      summary: Remove Organization Feature
      description: Removes an organization feature. This activity must be approved
        by the current root quorum.
      operationId: PublicApiService_RemoveOrganizationFeature
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1RemoveOrganizationFeatureRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/set_organization_feature":
    post:
      tags:
      - Features
      summary: Set Organization Feature
      description: Sets an organization feature. This activity must be approved by
        the current root quorum.
      operationId: PublicApiService_SetOrganizationFeature
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1SetOrganizationFeatureRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/sign_raw_payload":
    post:
      tags:
      - Signing
      summary: Sign Raw Payload
      description: Sign a raw payload
      operationId: PublicApiService_SignRawPayload
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1SignRawPayloadRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/sign_raw_payloads":
    post:
      tags:
      - Signing
      summary: Sign Raw Payloads
      description: Sign multiple raw payloads with the same signing parameters
      operationId: PublicApiService_SignRawPayloads
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1SignRawPayloadsRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/sign_transaction":
    post:
      tags:
      - Signing
      summary: Sign Transaction
      description: Sign a transaction
      operationId: PublicApiService_SignTransaction
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1SignTransactionRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/update_policy":
    post:
      tags:
      - Policies
      summary: Update Policy
      description: Update an existing Policy
      operationId: PublicApiService_UpdatePolicy
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1UpdatePolicyRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/update_private_key_tag":
    post:
      tags:
      - Private Key Tags
      summary: Update Private Key Tag
      description: 'Update human-readable name or associated private keys. Note that
        this activity is atomic: all of the updates will succeed at once, or all of
        them will fail.'
      operationId: PublicApiService_UpdatePrivateKeyTag
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1UpdatePrivateKeyTagRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/update_root_quorum":
    post:
      tags:
      - Organizations
      summary: Update Root Quorum
      description: Set the threshold and members of the root quorum. This activity
        must be approved by the current root quorum.
      operationId: PublicApiService_UpdateRootQuorum
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1UpdateRootQuorumRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/update_user":
    post:
      tags:
      - Users
      summary: Update User
      description: Update a User in an existing Organization
      operationId: PublicApiService_UpdateUser
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1UpdateUserRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/public/v1/submit/update_user_tag":
    post:
      tags:
      - User Tags
      summary: Update User Tag
      description: 'Update human-readable name or associated users. Note that this
        activity is atomic: all of the updates will succeed at once, or all of them
        will fail.'
      operationId: PublicApiService_UpdateUserTag
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/v1UpdateUserTagRequest"
        required: true
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1ActivityResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  "/tkhq/api/v1/noop-codegen-anchor":
    post:
      tags:
      - PublicApiService
      operationId: PublicApiService_NOOPCodegenAnchor
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/v1NOOPCodegenAnchorResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/rpcStatus"
components:
  schemas:
    apiApiKeyParams:
      required:
      - apiKeyName
      - publicKey
      type: object
      properties:
        apiKeyName:
          type: string
          description: Human-readable name for an API Key.
        publicKey:
          type: string
          description: The public component of a cryptographic key pair used to sign
            messages and transactions.
        expirationSeconds:
          type: string
          description: Optional window (in seconds) indicating how long the API Key
            should last.
    billingActivateBillingTierIntent:
      required:
      - productId
      type: object
      properties:
        productId:
          type: string
          description: The product that the customer wants to subscribe to.
    billingActivateBillingTierResult:
      required:
      - productId
      type: object
      properties:
        productId:
          type: string
          description: The id of the product being subscribed to.
    billingDeletePaymentMethodIntent:
      required:
      - paymentMethodId
      type: object
      properties:
        paymentMethodId:
          type: string
          description: The payment method that the customer wants to remove.
    billingDeletePaymentMethodResult:
      required:
      - paymentMethodId
      type: object
      properties:
        paymentMethodId:
          type: string
          description: The payment method that was removed.
    billingSetPaymentMethodIntent:
      required:
      - cardHolderEmail
      - cardHolderName
      - cvv
      - expiryMonth
      - expiryYear
      - number
      type: object
      properties:
        number:
          type: string
          description: The account number of the customer's credit card.
        cvv:
          type: string
          description: The verification digits of the customer's credit card.
        expiryMonth:
          type: string
          description: The month that the credit card expires.
        expiryYear:
          type: string
          description: The year that the credit card expires.
        cardHolderEmail:
          type: string
          description: The email that will receive invoices for the credit card.
        cardHolderName:
          type: string
          description: The name associated with the credit card.
    billingSetPaymentMethodIntentV2:
      required:
      - cardHolderEmail
      - cardHolderName
      - paymentMethodId
      type: object
      properties:
        paymentMethodId:
          type: string
          description: The id of the payment method that was created clientside.
        cardHolderEmail:
          type: string
          description: The email that will receive invoices for the credit card.
        cardHolderName:
          type: string
          description: The name associated with the credit card.
    billingSetPaymentMethodResult:
      required:
      - cardHolderEmail
      - cardHolderName
      - lastFour
      type: object
      properties:
        lastFour:
          type: string
          description: The last four digits of the credit card added.
        cardHolderName:
          type: string
          description: The name associated with the payment method.
        cardHolderEmail:
          type: string
          description: The email address associated with the payment method.
    datav1Tag:
      required:
      - createdAt
      - tagId
      - tagName
      - tagType
      - updatedAt
      type: object
      properties:
        tagId:
          type: string
          description: Unique identifier for a given Tag.
        tagName:
          type: string
          description: Human-readable name for a Tag.
        tagType:
          "$ref": "#/components/schemas/v1TagType"
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    externaldatav1Address:
      type: object
      properties:
        format:
          "$ref": "#/components/schemas/v1AddressFormat"
        address:
          type: string
    externaldatav1Credential:
      required:
      - publicKey
      - type
      type: object
      properties:
        publicKey:
          type: string
          description: The public component of a cryptographic key pair used to sign
            messages and transactions.
        type:
          "$ref": "#/components/schemas/v1CredentialType"
    externaldatav1Quorum:
      required:
      - threshold
      - userIds
      type: object
      properties:
        threshold:
          type: integer
          description: Count of unique approvals required to meet quorum.
          format: int32
        userIds:
          type: array
          description: Unique identifiers of quorum set members.
          items:
            type: string
    externaldatav1Timestamp:
      required:
      - nanos
      - seconds
      type: object
      properties:
        seconds:
          type: string
        nanos:
          type: string
    immutableactivityv1Address:
      type: object
      properties:
        format:
          "$ref": "#/components/schemas/v1AddressFormat"
        address:
          type: string
    protobufAny:
      type: object
      properties:
        "@type":
          type: string
      additionalProperties:
        type: object
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            "$ref": "#/components/schemas/protobufAny"
    v1AcceptInvitationIntent:
      required:
      - authenticator
      - invitationId
      - userId
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation object.
        userId:
          type: string
          description: Unique identifier for a given User.
        authenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParams"
    v1AcceptInvitationIntentV2:
      required:
      - authenticator
      - invitationId
      - userId
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation object.
        userId:
          type: string
          description: Unique identifier for a given User.
        authenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
    v1AcceptInvitationResult:
      required:
      - invitationId
      - userId
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation.
        userId:
          type: string
          description: Unique identifier for a given User.
    v1AccessType:
      type: string
      enum:
      - ACCESS_TYPE_WEB
      - ACCESS_TYPE_API
      - ACCESS_TYPE_ALL
    v1Activity:
      required:
      - canApprove
      - canReject
      - createdAt
      - fingerprint
      - id
      - intent
      - organizationId
      - result
      - status
      - type
      - updatedAt
      - votes
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a given Activity object.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        status:
          "$ref": "#/components/schemas/v1ActivityStatus"
        type:
          "$ref": "#/components/schemas/v1ActivityType"
        intent:
          "$ref": "#/components/schemas/v1Intent"
        result:
          "$ref": "#/components/schemas/v1Result"
        votes:
          type: array
          description: A list of objects representing a particular User's approval
            or rejection of a Consensus request, including all relevant metadata.
          items:
            "$ref": "#/components/schemas/v1Vote"
        fingerprint:
          type: string
          description: An artifact verifying a User's action.
        canApprove:
          type: boolean
        canReject:
          type: boolean
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        failure:
          "$ref": "#/components/schemas/rpcStatus"
    v1ActivityResponse:
      required:
      - activity
      type: object
      properties:
        activity:
          "$ref": "#/components/schemas/v1Activity"
    v1ActivityStatus:
      type: string
      enum:
      - ACTIVITY_STATUS_CREATED
      - ACTIVITY_STATUS_PENDING
      - ACTIVITY_STATUS_COMPLETED
      - ACTIVITY_STATUS_FAILED
      - ACTIVITY_STATUS_CONSENSUS_NEEDED
      - ACTIVITY_STATUS_REJECTED
    v1ActivityType:
      type: string
      enum:
      - ACTIVITY_TYPE_CREATE_API_KEYS
      - ACTIVITY_TYPE_CREATE_USERS
      - ACTIVITY_TYPE_CREATE_PRIVATE_KEYS
      - ACTIVITY_TYPE_SIGN_RAW_PAYLOAD
      - ACTIVITY_TYPE_CREATE_INVITATIONS
      - ACTIVITY_TYPE_ACCEPT_INVITATION
      - ACTIVITY_TYPE_CREATE_POLICY
      - ACTIVITY_TYPE_DISABLE_PRIVATE_KEY
      - ACTIVITY_TYPE_DELETE_USERS
      - ACTIVITY_TYPE_DELETE_API_KEYS
      - ACTIVITY_TYPE_DELETE_INVITATION
      - ACTIVITY_TYPE_DELETE_ORGANIZATION
      - ACTIVITY_TYPE_DELETE_POLICY
      - ACTIVITY_TYPE_CREATE_USER_TAG
      - ACTIVITY_TYPE_DELETE_USER_TAGS
      - ACTIVITY_TYPE_CREATE_ORGANIZATION
      - ACTIVITY_TYPE_SIGN_TRANSACTION
      - ACTIVITY_TYPE_APPROVE_ACTIVITY
      - ACTIVITY_TYPE_REJECT_ACTIVITY
      - ACTIVITY_TYPE_DELETE_AUTHENTICATORS
      - ACTIVITY_TYPE_CREATE_AUTHENTICATORS
      - ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG
      - ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS
      - ACTIVITY_TYPE_SET_PAYMENT_METHOD
      - ACTIVITY_TYPE_ACTIVATE_BILLING_TIER
      - ACTIVITY_TYPE_DELETE_PAYMENT_METHOD
      - ACTIVITY_TYPE_CREATE_POLICY_V2
      - ACTIVITY_TYPE_CREATE_POLICY_V3
      - ACTIVITY_TYPE_CREATE_API_ONLY_USERS
      - ACTIVITY_TYPE_UPDATE_ROOT_QUORUM
      - ACTIVITY_TYPE_UPDATE_USER_TAG
      - ACTIVITY_TYPE_UPDATE_PRIVATE_KEY_TAG
      - ACTIVITY_TYPE_CREATE_AUTHENTICATORS_V2
      - ACTIVITY_TYPE_CREATE_ORGANIZATION_V2
      - ACTIVITY_TYPE_CREATE_USERS_V2
      - ACTIVITY_TYPE_ACCEPT_INVITATION_V2
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V2
      - ACTIVITY_TYPE_UPDATE_ALLOWED_ORIGINS
      - ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2
      - ACTIVITY_TYPE_UPDATE_USER
      - ACTIVITY_TYPE_UPDATE_POLICY
      - ACTIVITY_TYPE_SET_PAYMENT_METHOD_V2
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V3
      - ACTIVITY_TYPE_CREATE_WALLET
      - ACTIVITY_TYPE_CREATE_WALLET_ACCOUNTS
      - ACTIVITY_TYPE_INIT_USER_EMAIL_RECOVERY
      - ACTIVITY_TYPE_RECOVER_USER
      - ACTIVITY_TYPE_SET_ORGANIZATION_FEATURE
      - ACTIVITY_TYPE_REMOVE_ORGANIZATION_FEATURE
      - ACTIVITY_TYPE_SIGN_RAW_PAYLOAD_V2
      - ACTIVITY_TYPE_SIGN_TRANSACTION_V2
      - ACTIVITY_TYPE_EXPORT_PRIVATE_KEY
      - ACTIVITY_TYPE_EXPORT_WALLET
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V4
      - ACTIVITY_TYPE_EMAIL_AUTH
      - ACTIVITY_TYPE_EXPORT_WALLET_ACCOUNT
      - ACTIVITY_TYPE_INIT_IMPORT_WALLET
      - ACTIVITY_TYPE_IMPORT_WALLET
      - ACTIVITY_TYPE_INIT_IMPORT_PRIVATE_KEY
      - ACTIVITY_TYPE_IMPORT_PRIVATE_KEY
      - ACTIVITY_TYPE_CREATE_POLICIES
      - ACTIVITY_TYPE_SIGN_RAW_PAYLOADS
      - ACTIVITY_TYPE_CREATE_READ_ONLY_SESSION
      - ACTIVITY_TYPE_CREATE_OAUTH_PROVIDERS
      - ACTIVITY_TYPE_DELETE_OAUTH_PROVIDERS
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V5
      - ACTIVITY_TYPE_OAUTH
      - ACTIVITY_TYPE_CREATE_API_KEYS_V2
      - ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION
      - ACTIVITY_TYPE_EMAIL_AUTH_V2
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V6
      - ACTIVITY_TYPE_DELETE_PRIVATE_KEYS
      - ACTIVITY_TYPE_DELETE_WALLETS
      - ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2
      - ACTIVITY_TYPE_DELETE_SUB_ORGANIZATION
      - ACTIVITY_TYPE_INIT_OTP_AUTH
      - ACTIVITY_TYPE_OTP_AUTH
      - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7
    v1AddressFormat:
      type: string
      enum:
      - ADDRESS_FORMAT_UNCOMPRESSED
      - ADDRESS_FORMAT_COMPRESSED
      - ADDRESS_FORMAT_ETHEREUM
      - ADDRESS_FORMAT_SOLANA
      - ADDRESS_FORMAT_COSMOS
      - ADDRESS_FORMAT_TRON
      - ADDRESS_FORMAT_SUI
      - ADDRESS_FORMAT_APTOS
      - ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH
      - ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH
      - ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH
      - ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH
      - ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR
      - ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH
      - ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH
      - ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH
      - ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH
      - ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR
      - ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH
      - ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH
      - ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH
      - ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH
      - ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR
      - ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH
      - ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH
      - ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH
      - ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH
      - ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR
      - ADDRESS_FORMAT_SEI
      - ADDRESS_FORMAT_XLM
      - ADDRESS_FORMAT_DOGE_MAINNET
      - ADDRESS_FORMAT_DOGE_TESTNET
      - ADDRESS_FORMAT_TON_V3R2
      - ADDRESS_FORMAT_TON_V4R2
    v1ApiKey:
      required:
      - apiKeyId
      - apiKeyName
      - createdAt
      - credential
      - updatedAt
      type: object
      properties:
        credential:
          "$ref": "#/components/schemas/externaldatav1Credential"
        apiKeyId:
          type: string
          description: Unique identifier for a given API Key.
        apiKeyName:
          type: string
          description: Human-readable name for an API Key.
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        expirationSeconds:
          type: string
          description: Optional window (in seconds) indicating how long the API Key
            should last.
          format: uint64
    v1ApiKeyCurve:
      type: string
      enum:
      - API_KEY_CURVE_P256
      - API_KEY_CURVE_SECP256K1
      - API_KEY_CURVE_ED25519
    v1ApiKeyParamsV2:
      required:
      - apiKeyName
      - curveType
      - publicKey
      type: object
      properties:
        apiKeyName:
          type: string
          description: Human-readable name for an API Key.
        publicKey:
          type: string
          description: The public component of a cryptographic key pair used to sign
            messages and transactions.
        curveType:
          "$ref": "#/components/schemas/v1ApiKeyCurve"
        expirationSeconds:
          type: string
          description: Optional window (in seconds) indicating how long the API Key
            should last.
    v1ApiOnlyUserParams:
      required:
      - apiKeys
      - userName
      - userTags
      type: object
      properties:
        userName:
          type: string
          description: The name of the new API-only User.
        userEmail:
          type: string
          description: The email address for this API-only User (optional).
        userTags:
          type: array
          description: A list of tags assigned to the new API-only User.
          items:
            type: string
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
    v1ApproveActivityIntent:
      required:
      - fingerprint
      type: object
      properties:
        fingerprint:
          type: string
          description: An artifact verifying a User's action.
    v1ApproveActivityRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_APPROVE_ACTIVITY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ApproveActivityIntent"
    v1Attestation:
      required:
      - attestationObject
      - clientDataJson
      - credentialId
      - transports
      type: object
      properties:
        credentialId:
          type: string
          description: The cbor encoded then base64 url encoded id of the credential.
        clientDataJson:
          type: string
          description: A base64 url encoded payload containing metadata about the
            signing context and the challenge.
        attestationObject:
          type: string
          description: A base64 url encoded payload containing authenticator data
            and any attestation the webauthn provider chooses.
        transports:
          type: array
          description: The type of authenticator transports.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorTransport"
    v1Authenticator:
      required:
      - aaguid
      - attestationType
      - authenticatorId
      - authenticatorName
      - createdAt
      - credential
      - credentialId
      - model
      - transports
      - updatedAt
      type: object
      properties:
        transports:
          type: array
          description: Types of transports that may be used by an Authenticator (e.g.,
            USB, NFC, BLE).
          items:
            "$ref": "#/components/schemas/v1AuthenticatorTransport"
        attestationType:
          type: string
        aaguid:
          type: string
          description: Identifier indicating the type of the Security Key.
        credentialId:
          type: string
          description: Unique identifier for a WebAuthn credential.
        model:
          type: string
          description: The type of Authenticator device.
        credential:
          "$ref": "#/components/schemas/externaldatav1Credential"
        authenticatorId:
          type: string
          description: Unique identifier for a given Authenticator.
        authenticatorName:
          type: string
          description: Human-readable name for an Authenticator.
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    v1AuthenticatorAttestationResponse:
      required:
      - attestationObject
      - clientDataJson
      type: object
      properties:
        clientDataJson:
          type: string
        attestationObject:
          type: string
        transports:
          type: array
          items:
            "$ref": "#/components/schemas/v1AuthenticatorTransport"
        authenticatorAttachment:
          type: string
          nullable: true
          enum:
          - cross-platform
          - platform
    v1AuthenticatorParams:
      required:
      - attestation
      - authenticatorName
      - challenge
      - userId
      type: object
      properties:
        authenticatorName:
          type: string
          description: Human-readable name for an Authenticator.
        userId:
          type: string
          description: Unique identifier for a given User.
        attestation:
          "$ref": "#/components/schemas/v1PublicKeyCredentialWithAttestation"
        challenge:
          type: string
          description: Challenge presented for authentication purposes.
    v1AuthenticatorParamsV2:
      required:
      - attestation
      - authenticatorName
      - challenge
      type: object
      properties:
        authenticatorName:
          type: string
          description: Human-readable name for an Authenticator.
        challenge:
          type: string
          description: Challenge presented for authentication purposes.
        attestation:
          "$ref": "#/components/schemas/v1Attestation"
    v1AuthenticatorTransport:
      type: string
      enum:
      - AUTHENTICATOR_TRANSPORT_BLE
      - AUTHENTICATOR_TRANSPORT_INTERNAL
      - AUTHENTICATOR_TRANSPORT_NFC
      - AUTHENTICATOR_TRANSPORT_USB
      - AUTHENTICATOR_TRANSPORT_HYBRID
    v1Config:
      type: object
      properties:
        features:
          type: array
          items:
            "$ref": "#/components/schemas/v1Feature"
        quorum:
          "$ref": "#/components/schemas/externaldatav1Quorum"
    v1CreateApiKeysIntent:
      required:
      - apiKeys
      - userId
      type: object
      properties:
        apiKeys:
          type: array
          description: A list of API Keys.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
        userId:
          type: string
          description: Unique identifier for a given User.
    v1CreateApiKeysIntentV2:
      required:
      - apiKeys
      - userId
      type: object
      properties:
        apiKeys:
          type: array
          description: A list of API Keys.
          items:
            "$ref": "#/components/schemas/v1ApiKeyParamsV2"
        userId:
          type: string
          description: Unique identifier for a given User.
    v1CreateApiKeysRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_API_KEYS_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateApiKeysIntentV2"
    v1CreateApiKeysResult:
      required:
      - apiKeyIds
      type: object
      properties:
        apiKeyIds:
          type: array
          description: A list of API Key IDs.
          items:
            type: string
    v1CreateApiOnlyUsersIntent:
      required:
      - apiOnlyUsers
      type: object
      properties:
        apiOnlyUsers:
          type: array
          description: A list of API-only Users to create.
          items:
            "$ref": "#/components/schemas/v1ApiOnlyUserParams"
    v1CreateApiOnlyUsersRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_API_ONLY_USERS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateApiOnlyUsersIntent"
    v1CreateApiOnlyUsersResult:
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          description: A list of API-only User IDs.
          items:
            type: string
    v1CreateAuthenticatorsIntent:
      required:
      - authenticators
      - userId
      type: object
      properties:
        authenticators:
          type: array
          description: A list of Authenticators.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParams"
        userId:
          type: string
          description: Unique identifier for a given User.
    v1CreateAuthenticatorsIntentV2:
      required:
      - authenticators
      - userId
      type: object
      properties:
        authenticators:
          type: array
          description: A list of Authenticators.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        userId:
          type: string
          description: Unique identifier for a given User.
    v1CreateAuthenticatorsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_AUTHENTICATORS_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateAuthenticatorsIntentV2"
    v1CreateAuthenticatorsResult:
      required:
      - authenticatorIds
      type: object
      properties:
        authenticatorIds:
          type: array
          description: A list of Authenticator IDs.
          items:
            type: string
    v1CreateInvitationsIntent:
      required:
      - invitations
      type: object
      properties:
        invitations:
          type: array
          description: A list of Invitations.
          items:
            "$ref": "#/components/schemas/v1InvitationParams"
    v1CreateInvitationsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_INVITATIONS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateInvitationsIntent"
    v1CreateInvitationsResult:
      required:
      - invitationIds
      type: object
      properties:
        invitationIds:
          type: array
          description: A list of Invitation IDs
          items:
            type: string
    v1CreateOauthProvidersIntent:
      required:
      - oauthProviders
      - userId
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User to add an Oauth provider to
        oauthProviders:
          type: array
          description: A list of Oauth providers.
          items:
            "$ref": "#/components/schemas/v1OauthProviderParams"
    v1CreateOauthProvidersRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_OAUTH_PROVIDERS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateOauthProvidersIntent"
    v1CreateOauthProvidersResult:
      required:
      - providerIds
      type: object
      properties:
        providerIds:
          type: array
          description: A list of unique identifiers for Oauth Providers
          items:
            type: string
    v1CreateOrganizationIntent:
      required:
      - organizationName
      - rootAuthenticator
      - rootEmail
      type: object
      properties:
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        rootEmail:
          type: string
          description: The root user's email address.
        rootAuthenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParams"
        rootUserId:
          type: string
          description: Unique identifier for the root user object.
    v1CreateOrganizationIntentV2:
      required:
      - organizationName
      - rootAuthenticator
      - rootEmail
      type: object
      properties:
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        rootEmail:
          type: string
          description: The root user's email address.
        rootAuthenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        rootUserId:
          type: string
          description: Unique identifier for the root user object.
    v1CreateOrganizationResult:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1CreatePoliciesIntent:
      required:
      - policies
      type: object
      properties:
        policies:
          type: array
          description: An array of policy intents to be created.
          items:
            "$ref": "#/components/schemas/v1CreatePolicyIntentV3"
    v1CreatePoliciesRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_POLICIES
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreatePoliciesIntent"
    v1CreatePoliciesResult:
      required:
      - policyIds
      type: object
      properties:
        policyIds:
          type: array
          description: A list of unique identifiers for the created policies.
          items:
            type: string
    v1CreatePolicyIntent:
      required:
      - effect
      - policyName
      - selectors
      type: object
      properties:
        policyName:
          type: string
          description: Human-readable name for a Policy.
        selectors:
          type: array
          description: A list of simple functions each including a subject, target
            and boolean. See Policy Engine Language section for additional details.
          items:
            "$ref": "#/components/schemas/v1Selector"
        effect:
          "$ref": "#/components/schemas/v1Effect"
        notes:
          type: string
    v1CreatePolicyIntentV2:
      required:
      - effect
      - policyName
      - selectors
      type: object
      properties:
        policyName:
          type: string
          description: Human-readable name for a Policy.
        selectors:
          type: array
          description: A list of simple functions each including a subject, target
            and boolean. See Policy Engine Language section for additional details.
          items:
            "$ref": "#/components/schemas/v1SelectorV2"
        effect:
          "$ref": "#/components/schemas/v1Effect"
        notes:
          type: string
    v1CreatePolicyIntentV3:
      required:
      - effect
      - policyName
      type: object
      properties:
        policyName:
          type: string
          description: Human-readable name for a Policy.
        effect:
          "$ref": "#/components/schemas/v1Effect"
        condition:
          type: string
          description: The condition expression that triggers the Effect
        consensus:
          type: string
          description: The consensus expression that triggers the Effect
        notes:
          type: string
    v1CreatePolicyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_POLICY_V3
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreatePolicyIntentV3"
    v1CreatePolicyResult:
      required:
      - policyId
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
    v1CreatePrivateKeyTagIntent:
      required:
      - privateKeyIds
      - privateKeyTagName
      type: object
      properties:
        privateKeyTagName:
          type: string
          description: Human-readable name for a Private Key Tag.
        privateKeyIds:
          type: array
          description: A list of Private Key IDs.
          items:
            type: string
    v1CreatePrivateKeyTagRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreatePrivateKeyTagIntent"
    v1CreatePrivateKeyTagResult:
      required:
      - privateKeyIds
      - privateKeyTagId
      type: object
      properties:
        privateKeyTagId:
          type: string
          description: Unique identifier for a given Private Key Tag.
        privateKeyIds:
          type: array
          description: A list of Private Key IDs.
          items:
            type: string
    v1CreatePrivateKeysIntent:
      required:
      - privateKeys
      type: object
      properties:
        privateKeys:
          type: array
          description: A list of Private Keys.
          items:
            "$ref": "#/components/schemas/v1PrivateKeyParams"
    v1CreatePrivateKeysIntentV2:
      required:
      - privateKeys
      type: object
      properties:
        privateKeys:
          type: array
          description: A list of Private Keys.
          items:
            "$ref": "#/components/schemas/v1PrivateKeyParams"
    v1CreatePrivateKeysRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreatePrivateKeysIntentV2"
    v1CreatePrivateKeysResult:
      required:
      - privateKeyIds
      type: object
      properties:
        privateKeyIds:
          type: array
          description: A list of Private Key IDs.
          items:
            type: string
    v1CreatePrivateKeysResultV2:
      required:
      - privateKeys
      type: object
      properties:
        privateKeys:
          type: array
          description: A list of Private Key IDs and addresses.
          items:
            "$ref": "#/components/schemas/v1PrivateKeyResult"
    v1CreateReadOnlySessionIntent:
      type: object
    v1CreateReadOnlySessionRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_READ_ONLY_SESSION
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateReadOnlySessionIntent"
    v1CreateReadOnlySessionResult:
      required:
      - organizationId
      - organizationName
      - session
      - sessionExpiry
      - userId
      - username
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization. If the request
            is being made by a user and their Sub-Organization ID is unknown, this
            can be the Parent Organization ID. However, using the Sub-Organization
            ID is preferred due to performance reasons.
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
        username:
          type: string
          description: Human-readable name for a User.
        session:
          type: string
          description: String representing a read only session
        sessionExpiry:
          type: string
          description: UTC timestamp in seconds representing the expiry time for the
            read only session.
          format: uint64
    v1CreateReadWriteSessionIntent:
      required:
      - email
      - targetPublicKey
      type: object
      properties:
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            read write session bundle (credentials) will be encrypted.
        email:
          type: string
          description: Email of the user to create a read write session for
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to Read Write Session - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
    v1CreateReadWriteSessionIntentV2:
      required:
      - targetPublicKey
      type: object
      properties:
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            read write session bundle (credentials) will be encrypted.
        userId:
          type: string
          description: Unique identifier for a given User.
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to Read Write Session - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
    v1CreateReadWriteSessionRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateReadWriteSessionIntentV2"
    v1CreateReadWriteSessionResult:
      required:
      - apiKeyId
      - credentialBundle
      - organizationId
      - organizationName
      - userId
      - username
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization. If the request
            is being made by a user and their Sub-Organization ID is unknown, this
            can be the Parent Organization ID. However, using the Sub-Organization
            ID is preferred due to performance reasons.
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
        username:
          type: string
          description: Human-readable name for a User.
        apiKeyId:
          type: string
          description: Unique identifier for the created API key.
        credentialBundle:
          type: string
          description: HPKE encrypted credential bundle
    v1CreateReadWriteSessionResultV2:
      required:
      - apiKeyId
      - credentialBundle
      - organizationId
      - organizationName
      - userId
      - username
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization. If the request
            is being made by a user and their Sub-Organization ID is unknown, this
            can be the Parent Organization ID. However, using the Sub-Organization
            ID is preferred due to performance reasons.
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
        username:
          type: string
          description: Human-readable name for a User.
        apiKeyId:
          type: string
          description: Unique identifier for the created API key.
        credentialBundle:
          type: string
          description: HPKE encrypted credential bundle
    v1CreateSubOrganizationIntent:
      required:
      - name
      - rootAuthenticator
      type: object
      properties:
        name:
          type: string
          description: Name for this sub-organization
        rootAuthenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
    v1CreateSubOrganizationIntentV2:
      required:
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParams"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
    v1CreateSubOrganizationIntentV3:
      required:
      - privateKeys
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParams"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
        privateKeys:
          type: array
          description: A list of Private Keys.
          items:
            "$ref": "#/components/schemas/v1PrivateKeyParams"
    v1CreateSubOrganizationIntentV4:
      required:
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParams"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
        wallet:
          "$ref": "#/components/schemas/v1WalletParams"
        disableEmailRecovery:
          type: boolean
          description: Disable email recovery for the sub-organization
        disableEmailAuth:
          type: boolean
          description: Disable email auth for the sub-organization
    v1CreateSubOrganizationIntentV5:
      required:
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParamsV2"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
        wallet:
          "$ref": "#/components/schemas/v1WalletParams"
        disableEmailRecovery:
          type: boolean
          description: Disable email recovery for the sub-organization
        disableEmailAuth:
          type: boolean
          description: Disable email auth for the sub-organization
    v1CreateSubOrganizationIntentV6:
      required:
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParamsV3"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
        wallet:
          "$ref": "#/components/schemas/v1WalletParams"
        disableEmailRecovery:
          type: boolean
          description: Disable email recovery for the sub-organization
        disableEmailAuth:
          type: boolean
          description: Disable email auth for the sub-organization
    v1CreateSubOrganizationIntentV7:
      required:
      - rootQuorumThreshold
      - rootUsers
      - subOrganizationName
      type: object
      properties:
        subOrganizationName:
          type: string
          description: Name for this sub-organization
        rootUsers:
          type: array
          description: Root users to create within this sub-organization
          items:
            "$ref": "#/components/schemas/v1RootUserParamsV4"
        rootQuorumThreshold:
          type: integer
          description: The threshold of unique approvals to reach root quorum. This
            value must be less than or equal to the number of root users
          format: int32
        wallet:
          "$ref": "#/components/schemas/v1WalletParams"
        disableEmailRecovery:
          type: boolean
          description: Disable email recovery for the sub-organization
        disableEmailAuth:
          type: boolean
          description: Disable email auth for the sub-organization
        disableSmsAuth:
          type: boolean
          description: Disable OTP SMS auth for the sub-organization
        disableOtpEmailAuth:
          type: boolean
          description: Disable OTP email auth for the sub-organization
    v1CreateSubOrganizationRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV7"
    v1CreateSubOrganizationResult:
      required:
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateSubOrganizationResultV3:
      required:
      - privateKeys
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        privateKeys:
          type: array
          description: A list of Private Key IDs and addresses.
          items:
            "$ref": "#/components/schemas/v1PrivateKeyResult"
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateSubOrganizationResultV4:
      required:
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        wallet:
          "$ref": "#/components/schemas/v1WalletResult"
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateSubOrganizationResultV5:
      required:
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        wallet:
          "$ref": "#/components/schemas/v1WalletResult"
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateSubOrganizationResultV6:
      required:
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        wallet:
          "$ref": "#/components/schemas/v1WalletResult"
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateSubOrganizationResultV7:
      required:
      - subOrganizationId
      type: object
      properties:
        subOrganizationId:
          type: string
        wallet:
          "$ref": "#/components/schemas/v1WalletResult"
        rootUserIds:
          type: array
          items:
            type: string
    v1CreateUserTagIntent:
      required:
      - userIds
      - userTagName
      type: object
      properties:
        userTagName:
          type: string
          description: Human-readable name for a User Tag.
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1CreateUserTagRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_USER_TAG
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateUserTagIntent"
    v1CreateUserTagResult:
      required:
      - userIds
      - userTagId
      type: object
      properties:
        userTagId:
          type: string
          description: Unique identifier for a given User Tag.
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1CreateUsersIntent:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          description: A list of Users.
          items:
            "$ref": "#/components/schemas/v1UserParams"
    v1CreateUsersIntentV2:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          description: A list of Users.
          items:
            "$ref": "#/components/schemas/v1UserParamsV2"
    v1CreateUsersRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_USERS_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateUsersIntentV2"
    v1CreateUsersResult:
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1CreateWalletAccountsIntent:
      required:
      - accounts
      - walletId
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
        accounts:
          type: array
          description: A list of wallet Accounts.
          items:
            "$ref": "#/components/schemas/v1WalletAccountParams"
    v1CreateWalletAccountsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_WALLET_ACCOUNTS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateWalletAccountsIntent"
    v1CreateWalletAccountsResult:
      required:
      - addresses
      type: object
      properties:
        addresses:
          type: array
          description: A list of derived addresses.
          items:
            type: string
    v1CreateWalletIntent:
      required:
      - accounts
      - walletName
      type: object
      properties:
        walletName:
          type: string
          description: Human-readable name for a Wallet.
        accounts:
          type: array
          description: A list of wallet Accounts.
          items:
            "$ref": "#/components/schemas/v1WalletAccountParams"
        mnemonicLength:
          type: integer
          description: 'Length of mnemonic to generate the Wallet seed. Defaults to
            12. Accepted values: 12, 15, 18, 21, 24.'
          format: int32
    v1CreateWalletRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_CREATE_WALLET
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1CreateWalletIntent"
    v1CreateWalletResult:
      required:
      - addresses
      - walletId
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a Wallet.
        addresses:
          type: array
          description: A list of account addresses.
          items:
            type: string
    v1CredPropsAuthenticationExtensionsClientOutputs:
      required:
      - rk
      type: object
      properties:
        rk:
          type: boolean
    v1CredentialType:
      type: string
      enum:
      - CREDENTIAL_TYPE_WEBAUTHN_AUTHENTICATOR
      - CREDENTIAL_TYPE_API_KEY_P256
      - CREDENTIAL_TYPE_RECOVER_USER_KEY_P256
      - CREDENTIAL_TYPE_API_KEY_SECP256K1
      - CREDENTIAL_TYPE_EMAIL_AUTH_KEY_P256
      - CREDENTIAL_TYPE_API_KEY_ED25519
      - CREDENTIAL_TYPE_OTP_AUTH_KEY_P256
    v1Curve:
      type: string
      enum:
      - CURVE_SECP256K1
      - CURVE_ED25519
    v1DeleteApiKeysIntent:
      required:
      - apiKeyIds
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for a given User.
        apiKeyIds:
          type: array
          description: A list of API Key IDs.
          items:
            type: string
    v1DeleteApiKeysRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_API_KEYS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteApiKeysIntent"
    v1DeleteApiKeysResult:
      required:
      - apiKeyIds
      type: object
      properties:
        apiKeyIds:
          type: array
          description: A list of API Key IDs.
          items:
            type: string
    v1DeleteAuthenticatorsIntent:
      required:
      - authenticatorIds
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for a given User.
        authenticatorIds:
          type: array
          description: A list of Authenticator IDs.
          items:
            type: string
    v1DeleteAuthenticatorsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_AUTHENTICATORS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteAuthenticatorsIntent"
    v1DeleteAuthenticatorsResult:
      required:
      - authenticatorIds
      type: object
      properties:
        authenticatorIds:
          type: array
          description: Unique identifier for a given Authenticator.
          items:
            type: string
    v1DeleteInvitationIntent:
      required:
      - invitationId
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation object.
    v1DeleteInvitationRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_INVITATION
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteInvitationIntent"
    v1DeleteInvitationResult:
      required:
      - invitationId
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation.
    v1DeleteOauthProvidersIntent:
      required:
      - providerIds
      - userId
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User to remove an Oauth provider from
        providerIds:
          type: array
          description: Unique identifier for a given Provider.
          items:
            type: string
    v1DeleteOauthProvidersRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_OAUTH_PROVIDERS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteOauthProvidersIntent"
    v1DeleteOauthProvidersResult:
      required:
      - providerIds
      type: object
      properties:
        providerIds:
          type: array
          description: A list of unique identifiers for Oauth Providers
          items:
            type: string
    v1DeleteOrganizationIntent:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1DeleteOrganizationResult:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1DeletePolicyIntent:
      required:
      - policyId
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
    v1DeletePolicyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_POLICY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeletePolicyIntent"
    v1DeletePolicyResult:
      required:
      - policyId
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
    v1DeletePrivateKeyTagsIntent:
      required:
      - privateKeyTagIds
      type: object
      properties:
        privateKeyTagIds:
          type: array
          description: A list of Private Key Tag IDs.
          items:
            type: string
    v1DeletePrivateKeyTagsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeletePrivateKeyTagsIntent"
    v1DeletePrivateKeyTagsResult:
      required:
      - privateKeyIds
      - privateKeyTagIds
      type: object
      properties:
        privateKeyTagIds:
          type: array
          description: A list of Private Key Tag IDs.
          items:
            type: string
        privateKeyIds:
          type: array
          description: A list of Private Key IDs.
          items:
            type: string
    v1DeletePrivateKeysIntent:
      required:
      - privateKeyIds
      type: object
      properties:
        privateKeyIds:
          type: array
          description: List of unique identifiers for private keys within an organization
          items:
            type: string
        deleteWithoutExport:
          type: boolean
          description: Optional parameter for deleting the private keys, even if any
            have not been previously exported. If they have been exported, this field
            is ignored.
    v1DeletePrivateKeysRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_PRIVATE_KEYS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeletePrivateKeysIntent"
    v1DeletePrivateKeysResult:
      required:
      - privateKeyIds
      type: object
      properties:
        privateKeyIds:
          type: array
          description: A list of private key unique identifiers that were removed
          items:
            type: string
    v1DeleteSubOrganizationIntent:
      type: object
      properties:
        deleteWithoutExport:
          type: boolean
          description: 'Sub-organization deletion, by default, requires associated
            wallets and private keys to be exported for security reasons. Set this
            boolean to true to force sub-organization deletion even if some wallets
            or private keys within it have not been exported yet. Default: false.'
    v1DeleteSubOrganizationRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_SUB_ORGANIZATION
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteSubOrganizationIntent"
    v1DeleteSubOrganizationResult:
      required:
      - subOrganizationUuid
      type: object
      properties:
        subOrganizationUuid:
          type: string
          description: Unique identifier of the sub organization that was removed
    v1DeleteUserTagsIntent:
      required:
      - userTagIds
      type: object
      properties:
        userTagIds:
          type: array
          description: A list of User Tag IDs.
          items:
            type: string
    v1DeleteUserTagsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_USER_TAGS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteUserTagsIntent"
    v1DeleteUserTagsResult:
      required:
      - userIds
      - userTagIds
      type: object
      properties:
        userTagIds:
          type: array
          description: A list of User Tag IDs.
          items:
            type: string
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1DeleteUsersIntent:
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1DeleteUsersRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_USERS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteUsersIntent"
    v1DeleteUsersResult:
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          description: A list of User IDs.
          items:
            type: string
    v1DeleteWalletsIntent:
      required:
      - walletIds
      type: object
      properties:
        walletIds:
          type: array
          description: List of unique identifiers for wallets within an organization
          items:
            type: string
        deleteWithoutExport:
          type: boolean
          description: Optional parameter for deleting the wallets, even if any have
            not been previously exported. If they have been exported, this field is
            ignored.
    v1DeleteWalletsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_DELETE_WALLETS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1DeleteWalletsIntent"
    v1DeleteWalletsResult:
      required:
      - walletIds
      type: object
      properties:
        walletIds:
          type: array
          description: A list of wallet unique identifiers that were removed
          items:
            type: string
    v1DisablePrivateKeyIntent:
      required:
      - privateKeyId
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
    v1DisablePrivateKeyResult:
      required:
      - privateKeyId
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
    v1Effect:
      type: string
      enum:
      - EFFECT_ALLOW
      - EFFECT_DENY
    v1EmailAuthIntent:
      required:
      - email
      - targetPublicKey
      type: object
      properties:
        email:
          type: string
          description: Email of the authenticating user.
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            email auth bundle (credentials) will be encrypted.
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to Email Auth - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
        emailCustomization:
          "$ref": "#/components/schemas/v1EmailCustomizationParams"
        invalidateExisting:
          type: boolean
          description: Invalidate all other previously generated Email Auth API keys
    v1EmailAuthIntentV2:
      required:
      - email
      - targetPublicKey
      type: object
      properties:
        email:
          type: string
          description: Email of the authenticating user.
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            email auth bundle (credentials) will be encrypted.
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to Email Auth - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
        emailCustomization:
          "$ref": "#/components/schemas/v1EmailCustomizationParams"
        invalidateExisting:
          type: boolean
          description: Invalidate all other previously generated Email Auth API keys
    v1EmailAuthRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_EMAIL_AUTH_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1EmailAuthIntentV2"
    v1EmailAuthResult:
      required:
      - apiKeyId
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the authenticating User.
        apiKeyId:
          type: string
          description: Unique identifier for the created API key.
    v1EmailCustomizationParams:
      type: object
      properties:
        appName:
          type: string
          description: The name of the application.
        logoUrl:
          type: string
          description: A URL pointing to a logo in PNG format. Note this logo will
            be resized to fit into 340px x 124px.
        magicLinkTemplate:
          type: string
          description: A template for the URL to be used in a magic link button, e.g.
            `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`.
        templateVariables:
          type: string
          description: JSON object containing key/value pairs to be used with custom
            templates.
        templateId:
          type: string
          description: Unique identifier for a given Email Template. If not specified,
            the default is the most recent Email Template.
    v1ExportPrivateKeyIntent:
      required:
      - privateKeyId
      - targetPublicKey
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            export bundle will be encrypted.
    v1ExportPrivateKeyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_EXPORT_PRIVATE_KEY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ExportPrivateKeyIntent"
    v1ExportPrivateKeyResult:
      required:
      - exportBundle
      - privateKeyId
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
        exportBundle:
          type: string
          description: Export bundle containing a private key encrypted to the client's
            target public key.
    v1ExportWalletAccountIntent:
      required:
      - address
      - targetPublicKey
      type: object
      properties:
        address:
          type: string
          description: Address to identify Wallet Account.
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            export bundle will be encrypted.
    v1ExportWalletAccountRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_EXPORT_WALLET_ACCOUNT
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ExportWalletAccountIntent"
    v1ExportWalletAccountResult:
      required:
      - address
      - exportBundle
      type: object
      properties:
        address:
          type: string
          description: Address to identify Wallet Account.
        exportBundle:
          type: string
          description: Export bundle containing a private key encrypted by the client's
            target public key.
    v1ExportWalletIntent:
      required:
      - targetPublicKey
      - walletId
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            export bundle will be encrypted.
        language:
          "$ref": "#/components/schemas/v1MnemonicLanguage"
    v1ExportWalletRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_EXPORT_WALLET
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ExportWalletIntent"
    v1ExportWalletResult:
      required:
      - exportBundle
      - walletId
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
        exportBundle:
          type: string
          description: Export bundle containing a wallet mnemonic + optional newline
            passphrase encrypted by the client's target public key.
    v1Feature:
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/v1FeatureName"
        value:
          type: string
    v1FeatureName:
      type: string
      enum:
      - FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY
      - FEATURE_NAME_WEBAUTHN_ORIGINS
      - FEATURE_NAME_EMAIL_AUTH
      - FEATURE_NAME_EMAIL_RECOVERY
      - FEATURE_NAME_WEBHOOK
      - FEATURE_NAME_SMS_AUTH
      - FEATURE_NAME_OTP_EMAIL_AUTH
    v1GetActivitiesRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        filterByStatus:
          type: array
          description: Array of Activity Statuses filtering which Activities will
            be listed in the response.
          items:
            "$ref": "#/components/schemas/v1ActivityStatus"
        paginationOptions:
          "$ref": "#/components/schemas/v1Pagination"
        filterByType:
          type: array
          description: Array of Activity Types filtering which Activities will be
            listed in the response.
          items:
            "$ref": "#/components/schemas/v1ActivityType"
    v1GetActivitiesResponse:
      required:
      - activities
      type: object
      properties:
        activities:
          type: array
          description: A list of Activities.
          items:
            "$ref": "#/components/schemas/v1Activity"
    v1GetActivityRequest:
      required:
      - activityId
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        activityId:
          type: string
          description: Unique identifier for a given Activity object.
    v1GetApiKeyRequest:
      required:
      - apiKeyId
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        apiKeyId:
          type: string
          description: Unique identifier for a given API key.
    v1GetApiKeyResponse:
      required:
      - apiKey
      type: object
      properties:
        apiKey:
          "$ref": "#/components/schemas/v1ApiKey"
    v1GetApiKeysRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
    v1GetApiKeysResponse:
      required:
      - apiKeys
      type: object
      properties:
        apiKeys:
          type: array
          description: A list of API keys.
          items:
            "$ref": "#/components/schemas/v1ApiKey"
    v1GetAttestationDocumentRequest:
      required:
      - enclaveType
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        enclaveType:
          type: string
          description: 'The enclave type, one of: ump, notarizer, signer, evm-parser'
    v1GetAttestationDocumentResponse:
      required:
      - attestationDocument
      type: object
      properties:
        attestationDocument:
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
          description: Raw (CBOR-encoded) attestation document
          format: byte
    v1GetAuthenticatorRequest:
      required:
      - authenticatorId
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        authenticatorId:
          type: string
          description: Unique identifier for a given Authenticator.
    v1GetAuthenticatorResponse:
      required:
      - authenticator
      type: object
      properties:
        authenticator:
          "$ref": "#/components/schemas/v1Authenticator"
    v1GetAuthenticatorsRequest:
      required:
      - organizationId
      - userId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
    v1GetAuthenticatorsResponse:
      required:
      - authenticators
      type: object
      properties:
        authenticators:
          type: array
          description: A list of authenticators.
          items:
            "$ref": "#/components/schemas/v1Authenticator"
    v1GetOauthProvidersRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
    v1GetOauthProvidersResponse:
      required:
      - oauthProviders
      type: object
      properties:
        oauthProviders:
          type: array
          description: A list of Oauth Providers
          items:
            "$ref": "#/components/schemas/v1OauthProvider"
    v1GetOrganizationConfigsRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetOrganizationConfigsResponse:
      required:
      - configs
      type: object
      properties:
        configs:
          "$ref": "#/components/schemas/v1Config"
    v1GetOrganizationRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetOrganizationResponse:
      required:
      - organizationData
      type: object
      properties:
        organizationData:
          "$ref": "#/components/schemas/v1OrganizationData"
    v1GetPoliciesRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetPoliciesResponse:
      required:
      - policies
      type: object
      properties:
        policies:
          type: array
          description: A list of Policies.
          items:
            "$ref": "#/components/schemas/v1Policy"
    v1GetPolicyRequest:
      required:
      - organizationId
      - policyId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        policyId:
          type: string
          description: Unique identifier for a given Policy.
    v1GetPolicyResponse:
      required:
      - policy
      type: object
      properties:
        policy:
          "$ref": "#/components/schemas/v1Policy"
    v1GetPrivateKeyRequest:
      required:
      - organizationId
      - privateKeyId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
    v1GetPrivateKeyResponse:
      required:
      - privateKey
      type: object
      properties:
        privateKey:
          "$ref": "#/components/schemas/v1PrivateKey"
    v1GetPrivateKeysRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetPrivateKeysResponse:
      required:
      - privateKeys
      type: object
      properties:
        privateKeys:
          type: array
          description: A list of Private Keys.
          items:
            "$ref": "#/components/schemas/v1PrivateKey"
    v1GetSubOrgIdsRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for the parent Organization. This is used
            to find sub-organizations within it.
        filterType:
          type: string
          description: Specifies the type of filter to apply, i.e 'CREDENTIAL_ID',
            'NAME', 'USERNAME', 'EMAIL', 'OIDC_TOKEN' or 'PUBLIC_KEY'
        filterValue:
          type: string
          description: The value of the filter to apply for the specified type. For
            example, a specific email or name string.
        paginationOptions:
          "$ref": "#/components/schemas/v1Pagination"
    v1GetSubOrgIdsResponse:
      required:
      - organizationIds
      type: object
      properties:
        organizationIds:
          type: array
          description: List of unique identifiers for the matching sub-organizations.
          items:
            type: string
    v1GetUserRequest:
      required:
      - organizationId
      - userId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
    v1GetUserResponse:
      required:
      - user
      type: object
      properties:
        user:
          "$ref": "#/components/schemas/v1User"
    v1GetUsersRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetUsersResponse:
      required:
      - users
      type: object
      properties:
        users:
          type: array
          description: A list of Users.
          items:
            "$ref": "#/components/schemas/v1User"
    v1GetWalletAccountsRequest:
      required:
      - organizationId
      - walletId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
        paginationOptions:
          "$ref": "#/components/schemas/v1Pagination"
    v1GetWalletAccountsResponse:
      required:
      - accounts
      type: object
      properties:
        accounts:
          type: array
          description: A list of Accounts generated from a Wallet that share a common
            seed
          items:
            "$ref": "#/components/schemas/v1WalletAccount"
    v1GetWalletRequest:
      required:
      - organizationId
      - walletId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
    v1GetWalletResponse:
      required:
      - wallet
      type: object
      properties:
        wallet:
          "$ref": "#/components/schemas/v1Wallet"
    v1GetWalletsRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1GetWalletsResponse:
      required:
      - wallets
      type: object
      properties:
        wallets:
          type: array
          description: A list of Wallets.
          items:
            "$ref": "#/components/schemas/v1Wallet"
    v1GetWhoamiRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization. If the request
            is being made by a WebAuthN user and their Sub-Organization ID is unknown,
            this can be the Parent Organization ID; using the Sub-Organization ID
            when possible is preferred due to performance reasons.
    v1GetWhoamiResponse:
      required:
      - organizationId
      - organizationName
      - userId
      - username
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        organizationName:
          type: string
          description: Human-readable name for an Organization.
        userId:
          type: string
          description: Unique identifier for a given User.
        username:
          type: string
          description: Human-readable name for a User.
    v1HashFunction:
      type: string
      enum:
      - HASH_FUNCTION_NO_OP
      - HASH_FUNCTION_SHA256
      - HASH_FUNCTION_KECCAK256
      - HASH_FUNCTION_NOT_APPLICABLE
    v1ImportPrivateKeyIntent:
      required:
      - addressFormats
      - curve
      - encryptedBundle
      - privateKeyName
      - userId
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User importing a Private Key.
        privateKeyName:
          type: string
          description: Human-readable name for a Private Key.
        encryptedBundle:
          type: string
          description: Bundle containing a raw private key encrypted to the enclave's
            target public key.
        curve:
          "$ref": "#/components/schemas/v1Curve"
        addressFormats:
          type: array
          description: Cryptocurrency-specific formats for a derived address (e.g.,
            Ethereum).
          items:
            "$ref": "#/components/schemas/v1AddressFormat"
    v1ImportPrivateKeyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_IMPORT_PRIVATE_KEY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ImportPrivateKeyIntent"
    v1ImportPrivateKeyResult:
      required:
      - addresses
      - privateKeyId
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a Private Key.
        addresses:
          type: array
          description: A list of addresses.
          items:
            "$ref": "#/components/schemas/immutableactivityv1Address"
    v1ImportWalletIntent:
      required:
      - accounts
      - encryptedBundle
      - userId
      - walletName
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User importing a Wallet.
        walletName:
          type: string
          description: Human-readable name for a Wallet.
        encryptedBundle:
          type: string
          description: Bundle containing a wallet mnemonic encrypted to the enclave's
            target public key.
        accounts:
          type: array
          description: A list of wallet Accounts.
          items:
            "$ref": "#/components/schemas/v1WalletAccountParams"
    v1ImportWalletRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_IMPORT_WALLET
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1ImportWalletIntent"
    v1ImportWalletResult:
      required:
      - addresses
      - walletId
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a Wallet.
        addresses:
          type: array
          description: A list of account addresses.
          items:
            type: string
    v1InitImportPrivateKeyIntent:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User importing a Private Key.
    v1InitImportPrivateKeyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_INIT_IMPORT_PRIVATE_KEY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1InitImportPrivateKeyIntent"
    v1InitImportPrivateKeyResult:
      required:
      - importBundle
      type: object
      properties:
        importBundle:
          type: string
          description: Import bundle containing a public key and signature to use
            for importing client data.
    v1InitImportWalletIntent:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: The ID of the User importing a Wallet.
    v1InitImportWalletRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_INIT_IMPORT_WALLET
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1InitImportWalletIntent"
    v1InitImportWalletResult:
      required:
      - importBundle
      type: object
      properties:
        importBundle:
          type: string
          description: Import bundle containing a public key and signature to use
            for importing client data.
    v1InitOtpAuthIntent:
      required:
      - contact
      - otpType
      type: object
      properties:
        otpType:
          type: string
          description: Enum to specifiy whether to send OTP via SMS or email
        contact:
          type: string
          description: Email or phone number to send the OTP code to
        emailCustomization:
          "$ref": "#/components/schemas/v1EmailCustomizationParams"
    v1InitOtpAuthRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_INIT_OTP_AUTH
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1InitOtpAuthIntent"
    v1InitOtpAuthResult:
      required:
      - otpId
      type: object
      properties:
        otpId:
          type: string
          description: Unique identifier for an OTP authentication
    v1InitUserEmailRecoveryIntent:
      required:
      - email
      - targetPublicKey
      type: object
      properties:
        email:
          type: string
          description: Email of the user starting recovery
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            recovery bundle will be encrypted.
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the recovery
            credential is valid. If not provided, a default of 15 minutes will be
            used.
        emailCustomization:
          "$ref": "#/components/schemas/v1EmailCustomizationParams"
    v1InitUserEmailRecoveryRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_INIT_USER_EMAIL_RECOVERY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1InitUserEmailRecoveryIntent"
    v1InitUserEmailRecoveryResult:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the user being recovered.
    v1Intent:
      type: object
      properties:
        createOrganizationIntent:
          "$ref": "#/components/schemas/v1CreateOrganizationIntent"
        createAuthenticatorsIntent:
          "$ref": "#/components/schemas/v1CreateAuthenticatorsIntent"
        createUsersIntent:
          "$ref": "#/components/schemas/v1CreateUsersIntent"
        createPrivateKeysIntent:
          "$ref": "#/components/schemas/v1CreatePrivateKeysIntent"
        signRawPayloadIntent:
          "$ref": "#/components/schemas/v1SignRawPayloadIntent"
        createInvitationsIntent:
          "$ref": "#/components/schemas/v1CreateInvitationsIntent"
        acceptInvitationIntent:
          "$ref": "#/components/schemas/v1AcceptInvitationIntent"
        createPolicyIntent:
          "$ref": "#/components/schemas/v1CreatePolicyIntent"
        disablePrivateKeyIntent:
          "$ref": "#/components/schemas/v1DisablePrivateKeyIntent"
        deleteUsersIntent:
          "$ref": "#/components/schemas/v1DeleteUsersIntent"
        deleteAuthenticatorsIntent:
          "$ref": "#/components/schemas/v1DeleteAuthenticatorsIntent"
        deleteInvitationIntent:
          "$ref": "#/components/schemas/v1DeleteInvitationIntent"
        deleteOrganizationIntent:
          "$ref": "#/components/schemas/v1DeleteOrganizationIntent"
        deletePolicyIntent:
          "$ref": "#/components/schemas/v1DeletePolicyIntent"
        createUserTagIntent:
          "$ref": "#/components/schemas/v1CreateUserTagIntent"
        deleteUserTagsIntent:
          "$ref": "#/components/schemas/v1DeleteUserTagsIntent"
        signTransactionIntent:
          "$ref": "#/components/schemas/v1SignTransactionIntent"
        createApiKeysIntent:
          "$ref": "#/components/schemas/v1CreateApiKeysIntent"
        deleteApiKeysIntent:
          "$ref": "#/components/schemas/v1DeleteApiKeysIntent"
        approveActivityIntent:
          "$ref": "#/components/schemas/v1ApproveActivityIntent"
        rejectActivityIntent:
          "$ref": "#/components/schemas/v1RejectActivityIntent"
        createPrivateKeyTagIntent:
          "$ref": "#/components/schemas/v1CreatePrivateKeyTagIntent"
        deletePrivateKeyTagsIntent:
          "$ref": "#/components/schemas/v1DeletePrivateKeyTagsIntent"
        createPolicyIntentV2:
          "$ref": "#/components/schemas/v1CreatePolicyIntentV2"
        setPaymentMethodIntent:
          "$ref": "#/components/schemas/billingSetPaymentMethodIntent"
        activateBillingTierIntent:
          "$ref": "#/components/schemas/billingActivateBillingTierIntent"
        deletePaymentMethodIntent:
          "$ref": "#/components/schemas/billingDeletePaymentMethodIntent"
        createPolicyIntentV3:
          "$ref": "#/components/schemas/v1CreatePolicyIntentV3"
        createApiOnlyUsersIntent:
          "$ref": "#/components/schemas/v1CreateApiOnlyUsersIntent"
        updateRootQuorumIntent:
          "$ref": "#/components/schemas/v1UpdateRootQuorumIntent"
        updateUserTagIntent:
          "$ref": "#/components/schemas/v1UpdateUserTagIntent"
        updatePrivateKeyTagIntent:
          "$ref": "#/components/schemas/v1UpdatePrivateKeyTagIntent"
        createAuthenticatorsIntentV2:
          "$ref": "#/components/schemas/v1CreateAuthenticatorsIntentV2"
        acceptInvitationIntentV2:
          "$ref": "#/components/schemas/v1AcceptInvitationIntentV2"
        createOrganizationIntentV2:
          "$ref": "#/components/schemas/v1CreateOrganizationIntentV2"
        createUsersIntentV2:
          "$ref": "#/components/schemas/v1CreateUsersIntentV2"
        createSubOrganizationIntent:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntent"
        createSubOrganizationIntentV2:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV2"
        updateAllowedOriginsIntent:
          "$ref": "#/components/schemas/v1UpdateAllowedOriginsIntent"
        createPrivateKeysIntentV2:
          "$ref": "#/components/schemas/v1CreatePrivateKeysIntentV2"
        updateUserIntent:
          "$ref": "#/components/schemas/v1UpdateUserIntent"
        updatePolicyIntent:
          "$ref": "#/components/schemas/v1UpdatePolicyIntent"
        setPaymentMethodIntentV2:
          "$ref": "#/components/schemas/billingSetPaymentMethodIntentV2"
        createSubOrganizationIntentV3:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV3"
        createWalletIntent:
          "$ref": "#/components/schemas/v1CreateWalletIntent"
        createWalletAccountsIntent:
          "$ref": "#/components/schemas/v1CreateWalletAccountsIntent"
        initUserEmailRecoveryIntent:
          "$ref": "#/components/schemas/v1InitUserEmailRecoveryIntent"
        recoverUserIntent:
          "$ref": "#/components/schemas/v1RecoverUserIntent"
        setOrganizationFeatureIntent:
          "$ref": "#/components/schemas/v1SetOrganizationFeatureIntent"
        removeOrganizationFeatureIntent:
          "$ref": "#/components/schemas/v1RemoveOrganizationFeatureIntent"
        signRawPayloadIntentV2:
          "$ref": "#/components/schemas/v1SignRawPayloadIntentV2"
        signTransactionIntentV2:
          "$ref": "#/components/schemas/v1SignTransactionIntentV2"
        exportPrivateKeyIntent:
          "$ref": "#/components/schemas/v1ExportPrivateKeyIntent"
        exportWalletIntent:
          "$ref": "#/components/schemas/v1ExportWalletIntent"
        createSubOrganizationIntentV4:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV4"
        emailAuthIntent:
          "$ref": "#/components/schemas/v1EmailAuthIntent"
        exportWalletAccountIntent:
          "$ref": "#/components/schemas/v1ExportWalletAccountIntent"
        initImportWalletIntent:
          "$ref": "#/components/schemas/v1InitImportWalletIntent"
        importWalletIntent:
          "$ref": "#/components/schemas/v1ImportWalletIntent"
        initImportPrivateKeyIntent:
          "$ref": "#/components/schemas/v1InitImportPrivateKeyIntent"
        importPrivateKeyIntent:
          "$ref": "#/components/schemas/v1ImportPrivateKeyIntent"
        createPoliciesIntent:
          "$ref": "#/components/schemas/v1CreatePoliciesIntent"
        signRawPayloadsIntent:
          "$ref": "#/components/schemas/v1SignRawPayloadsIntent"
        createReadOnlySessionIntent:
          "$ref": "#/components/schemas/v1CreateReadOnlySessionIntent"
        createOauthProvidersIntent:
          "$ref": "#/components/schemas/v1CreateOauthProvidersIntent"
        deleteOauthProvidersIntent:
          "$ref": "#/components/schemas/v1DeleteOauthProvidersIntent"
        createSubOrganizationIntentV5:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV5"
        oauthIntent:
          "$ref": "#/components/schemas/v1OauthIntent"
        createApiKeysIntentV2:
          "$ref": "#/components/schemas/v1CreateApiKeysIntentV2"
        createReadWriteSessionIntent:
          "$ref": "#/components/schemas/v1CreateReadWriteSessionIntent"
        emailAuthIntentV2:
          "$ref": "#/components/schemas/v1EmailAuthIntentV2"
        createSubOrganizationIntentV6:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV6"
        deletePrivateKeysIntent:
          "$ref": "#/components/schemas/v1DeletePrivateKeysIntent"
        deleteWalletsIntent:
          "$ref": "#/components/schemas/v1DeleteWalletsIntent"
        createReadWriteSessionIntentV2:
          "$ref": "#/components/schemas/v1CreateReadWriteSessionIntentV2"
        deleteSubOrganizationIntent:
          "$ref": "#/components/schemas/v1DeleteSubOrganizationIntent"
        initOtpAuthIntent:
          "$ref": "#/components/schemas/v1InitOtpAuthIntent"
        otpAuthIntent:
          "$ref": "#/components/schemas/v1OtpAuthIntent"
        createSubOrganizationIntentV7:
          "$ref": "#/components/schemas/v1CreateSubOrganizationIntentV7"
    v1Invitation:
      required:
      - accessType
      - createdAt
      - invitationId
      - receiverEmail
      - receiverUserName
      - receiverUserTags
      - senderUserId
      - status
      - updatedAt
      type: object
      properties:
        invitationId:
          type: string
          description: Unique identifier for a given Invitation object.
        receiverUserName:
          type: string
          description: The name of the intended Invitation recipient.
        receiverEmail:
          type: string
          description: The email address of the intended Invitation recipient.
        receiverUserTags:
          type: array
          description: A list of tags assigned to the Invitation recipient.
          items:
            type: string
        accessType:
          "$ref": "#/components/schemas/v1AccessType"
        status:
          "$ref": "#/components/schemas/v1InvitationStatus"
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        senderUserId:
          type: string
          description: Unique identifier for the Sender of an Invitation.
    v1InvitationParams:
      required:
      - accessType
      - receiverUserEmail
      - receiverUserName
      - receiverUserTags
      - senderUserId
      type: object
      properties:
        receiverUserName:
          type: string
          description: The name of the intended Invitation recipient.
        receiverUserEmail:
          type: string
          description: The email address of the intended Invitation recipient.
        receiverUserTags:
          type: array
          description: A list of tags assigned to the Invitation recipient.
          items:
            type: string
        accessType:
          "$ref": "#/components/schemas/v1AccessType"
        senderUserId:
          type: string
          description: Unique identifier for the Sender of an Invitation.
    v1InvitationStatus:
      type: string
      enum:
      - INVITATION_STATUS_CREATED
      - INVITATION_STATUS_ACCEPTED
      - INVITATION_STATUS_REVOKED
    v1ListPrivateKeyTagsRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1ListPrivateKeyTagsResponse:
      required:
      - privateKeyTags
      type: object
      properties:
        privateKeyTags:
          type: array
          description: A list of Private Key Tags
          items:
            "$ref": "#/components/schemas/datav1Tag"
    v1ListUserTagsRequest:
      required:
      - organizationId
      type: object
      properties:
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
    v1ListUserTagsResponse:
      required:
      - userTags
      type: object
      properties:
        userTags:
          type: array
          description: A list of User Tags
          items:
            "$ref": "#/components/schemas/datav1Tag"
    v1MnemonicLanguage:
      type: string
      enum:
      - MNEMONIC_LANGUAGE_ENGLISH
      - MNEMONIC_LANGUAGE_SIMPLIFIED_CHINESE
      - MNEMONIC_LANGUAGE_TRADITIONAL_CHINESE
      - MNEMONIC_LANGUAGE_CZECH
      - MNEMONIC_LANGUAGE_FRENCH
      - MNEMONIC_LANGUAGE_ITALIAN
      - MNEMONIC_LANGUAGE_JAPANESE
      - MNEMONIC_LANGUAGE_KOREAN
      - MNEMONIC_LANGUAGE_SPANISH
    v1NOOPCodegenAnchorResponse:
      required:
      - stamp
      type: object
      properties:
        stamp:
          "$ref": "#/components/schemas/v1WebAuthnStamp"
    v1OauthIntent:
      required:
      - oidcToken
      - targetPublicKey
      type: object
      properties:
        oidcToken:
          type: string
          description: Base64 encoded OIDC token
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            oauth bundle (credentials) will be encrypted.
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to Oauth - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
    v1OauthProvider:
      required:
      - audience
      - createdAt
      - issuer
      - providerId
      - providerName
      - subject
      - updatedAt
      type: object
      properties:
        providerId:
          type: string
          description: Unique identifier for an OAuth Provider
        providerName:
          type: string
          description: Human-readable name to identify a Provider.
        issuer:
          type: string
          description: The issuer of the token, typically a URL indicating the authentication
            server, e.g https://accounts.google.com
        audience:
          type: string
          description: Expected audience ('aud' attribute of the signed token) which
            represents the app ID
        subject:
          type: string
          description: Expected subject ('sub' attribute of the signed token) which
            represents the user ID
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    v1OauthProviderParams:
      required:
      - oidcToken
      - providerName
      type: object
      properties:
        providerName:
          type: string
          description: Human-readable name to identify a Provider.
        oidcToken:
          type: string
          description: Base64 encoded OIDC token
    v1OauthRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_OAUTH
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1OauthIntent"
    v1OauthResult:
      required:
      - apiKeyId
      - credentialBundle
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the authenticating User.
        apiKeyId:
          type: string
          description: Unique identifier for the created API key.
        credentialBundle:
          type: string
          description: HPKE encrypted credential bundle
    v1Operator:
      type: string
      enum:
      - OPERATOR_EQUAL
      - OPERATOR_MORE_THAN
      - OPERATOR_MORE_THAN_OR_EQUAL
      - OPERATOR_LESS_THAN
      - OPERATOR_LESS_THAN_OR_EQUAL
      - OPERATOR_CONTAINS
      - OPERATOR_NOT_EQUAL
      - OPERATOR_IN
      - OPERATOR_NOT_IN
      - OPERATOR_CONTAINS_ONE
      - OPERATOR_CONTAINS_ALL
    v1OrganizationData:
      type: object
      properties:
        organizationId:
          type: string
        name:
          type: string
        users:
          type: array
          items:
            "$ref": "#/components/schemas/v1User"
        policies:
          type: array
          items:
            "$ref": "#/components/schemas/v1Policy"
        privateKeys:
          type: array
          items:
            "$ref": "#/components/schemas/v1PrivateKey"
        invitations:
          type: array
          items:
            "$ref": "#/components/schemas/v1Invitation"
        tags:
          type: array
          items:
            "$ref": "#/components/schemas/datav1Tag"
        rootQuorum:
          "$ref": "#/components/schemas/externaldatav1Quorum"
        features:
          type: array
          items:
            "$ref": "#/components/schemas/v1Feature"
        wallets:
          type: array
          items:
            "$ref": "#/components/schemas/v1Wallet"
    v1OtpAuthIntent:
      required:
      - otpCode
      - otpId
      type: object
      properties:
        otpId:
          type: string
          description: ID representing the result of an init OTP activity.
        otpCode:
          type: string
          description: 6 digit OTP code sent out to a user's contact (email or SMS)
        targetPublicKey:
          type: string
          description: Client-side public key generated by the user, to which the
            OTP bundle (credentials) will be encrypted.
        apiKeyName:
          type: string
          description: Optional human-readable name for an API Key. If none provided,
            default to OTP Auth - <Timestamp>
        expirationSeconds:
          type: string
          description: Expiration window (in seconds) indicating how long the API
            key is valid. If not provided, a default of 15 minutes will be used.
        invalidateExisting:
          type: boolean
          description: Invalidate all other previously generated OTP Auth API keys
    v1OtpAuthRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_OTP_AUTH
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1OtpAuthIntent"
    v1OtpAuthResult:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the authenticating User.
        apiKeyId:
          type: string
          description: Unique identifier for the created API key.
        credentialBundle:
          type: string
          description: HPKE encrypted credential bundle
    v1Pagination:
      type: object
      properties:
        limit:
          type: string
          description: A limit of the number of object to be returned, between 1 and
            100. Defaults to 10.
        before:
          type: string
          description: A pagination cursor. This is an object ID that enables you
            to fetch all objects before this ID.
        after:
          type: string
          description: A pagination cursor. This is an object ID that enables you
            to fetch all objects after this ID.
    v1PathFormat:
      type: string
      enum:
      - PATH_FORMAT_BIP32
    v1PayloadEncoding:
      type: string
      enum:
      - PAYLOAD_ENCODING_HEXADECIMAL
      - PAYLOAD_ENCODING_TEXT_UTF8
    v1Policy:
      required:
      - condition
      - consensus
      - createdAt
      - effect
      - notes
      - policyId
      - policyName
      - updatedAt
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
        policyName:
          type: string
          description: Human-readable name for a Policy.
        effect:
          "$ref": "#/components/schemas/v1Effect"
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        notes:
          type: string
          description: Human-readable notes added by a User to describe a particular
            policy.
        consensus:
          type: string
          description: A consensus expression that evalutes to true or false.
        condition:
          type: string
          description: A condition expression that evalutes to true or false.
    v1PrivateKey:
      required:
      - addresses
      - createdAt
      - curve
      - exported
      - imported
      - privateKeyId
      - privateKeyName
      - privateKeyTags
      - publicKey
      - updatedAt
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
        publicKey:
          type: string
          description: The public component of a cryptographic key pair used to sign
            messages and transactions.
        privateKeyName:
          type: string
          description: Human-readable name for a Private Key.
        curve:
          "$ref": "#/components/schemas/v1Curve"
        addresses:
          type: array
          description: Derived cryptocurrency addresses for a given Private Key.
          items:
            "$ref": "#/components/schemas/externaldatav1Address"
        privateKeyTags:
          type: array
          description: A list of Private Key Tag IDs.
          items:
            type: string
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        exported:
          type: boolean
          description: True when a given Private Key is exported, false otherwise.
        imported:
          type: boolean
          description: True when a given Private Key is imported, false otherwise.
    v1PrivateKeyParams:
      required:
      - addressFormats
      - curve
      - privateKeyName
      - privateKeyTags
      type: object
      properties:
        privateKeyName:
          type: string
          description: Human-readable name for a Private Key.
        curve:
          "$ref": "#/components/schemas/v1Curve"
        privateKeyTags:
          type: array
          description: A list of Private Key Tag IDs.
          items:
            type: string
        addressFormats:
          type: array
          description: Cryptocurrency-specific formats for a derived address (e.g.,
            Ethereum).
          items:
            "$ref": "#/components/schemas/v1AddressFormat"
    v1PrivateKeyResult:
      type: object
      properties:
        privateKeyId:
          type: string
        addresses:
          type: array
          items:
            "$ref": "#/components/schemas/immutableactivityv1Address"
    v1PublicKeyCredentialWithAttestation:
      required:
      - clientExtensionResults
      - id
      - rawId
      - response
      - type
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
          - public-key
        rawId:
          type: string
        authenticatorAttachment:
          type: string
          nullable: true
          enum:
          - cross-platform
          - platform
        response:
          "$ref": "#/components/schemas/v1AuthenticatorAttestationResponse"
        clientExtensionResults:
          "$ref": "#/components/schemas/v1SimpleClientExtensionResults"
    v1RecoverUserIntent:
      required:
      - authenticator
      - userId
      type: object
      properties:
        authenticator:
          "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        userId:
          type: string
          description: Unique identifier for the user performing recovery.
    v1RecoverUserRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_RECOVER_USER
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1RecoverUserIntent"
    v1RecoverUserResult:
      required:
      - authenticatorId
      type: object
      properties:
        authenticatorId:
          type: array
          description: ID of the authenticator created.
          items:
            type: string
    v1RejectActivityIntent:
      required:
      - fingerprint
      type: object
      properties:
        fingerprint:
          type: string
          description: An artifact verifying a User's action.
    v1RejectActivityRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_REJECT_ACTIVITY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1RejectActivityIntent"
    v1RemoveOrganizationFeatureIntent:
      required:
      - name
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/v1FeatureName"
    v1RemoveOrganizationFeatureRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_REMOVE_ORGANIZATION_FEATURE
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1RemoveOrganizationFeatureIntent"
    v1RemoveOrganizationFeatureResult:
      required:
      - features
      type: object
      properties:
        features:
          type: array
          description: Resulting list of organization features.
          items:
            "$ref": "#/components/schemas/v1Feature"
    v1Result:
      type: object
      properties:
        createOrganizationResult:
          "$ref": "#/components/schemas/v1CreateOrganizationResult"
        createAuthenticatorsResult:
          "$ref": "#/components/schemas/v1CreateAuthenticatorsResult"
        createUsersResult:
          "$ref": "#/components/schemas/v1CreateUsersResult"
        createPrivateKeysResult:
          "$ref": "#/components/schemas/v1CreatePrivateKeysResult"
        createInvitationsResult:
          "$ref": "#/components/schemas/v1CreateInvitationsResult"
        acceptInvitationResult:
          "$ref": "#/components/schemas/v1AcceptInvitationResult"
        signRawPayloadResult:
          "$ref": "#/components/schemas/v1SignRawPayloadResult"
        createPolicyResult:
          "$ref": "#/components/schemas/v1CreatePolicyResult"
        disablePrivateKeyResult:
          "$ref": "#/components/schemas/v1DisablePrivateKeyResult"
        deleteUsersResult:
          "$ref": "#/components/schemas/v1DeleteUsersResult"
        deleteAuthenticatorsResult:
          "$ref": "#/components/schemas/v1DeleteAuthenticatorsResult"
        deleteInvitationResult:
          "$ref": "#/components/schemas/v1DeleteInvitationResult"
        deleteOrganizationResult:
          "$ref": "#/components/schemas/v1DeleteOrganizationResult"
        deletePolicyResult:
          "$ref": "#/components/schemas/v1DeletePolicyResult"
        createUserTagResult:
          "$ref": "#/components/schemas/v1CreateUserTagResult"
        deleteUserTagsResult:
          "$ref": "#/components/schemas/v1DeleteUserTagsResult"
        signTransactionResult:
          "$ref": "#/components/schemas/v1SignTransactionResult"
        deleteApiKeysResult:
          "$ref": "#/components/schemas/v1DeleteApiKeysResult"
        createApiKeysResult:
          "$ref": "#/components/schemas/v1CreateApiKeysResult"
        createPrivateKeyTagResult:
          "$ref": "#/components/schemas/v1CreatePrivateKeyTagResult"
        deletePrivateKeyTagsResult:
          "$ref": "#/components/schemas/v1DeletePrivateKeyTagsResult"
        setPaymentMethodResult:
          "$ref": "#/components/schemas/billingSetPaymentMethodResult"
        activateBillingTierResult:
          "$ref": "#/components/schemas/billingActivateBillingTierResult"
        deletePaymentMethodResult:
          "$ref": "#/components/schemas/billingDeletePaymentMethodResult"
        createApiOnlyUsersResult:
          "$ref": "#/components/schemas/v1CreateApiOnlyUsersResult"
        updateRootQuorumResult:
          "$ref": "#/components/schemas/v1UpdateRootQuorumResult"
        updateUserTagResult:
          "$ref": "#/components/schemas/v1UpdateUserTagResult"
        updatePrivateKeyTagResult:
          "$ref": "#/components/schemas/v1UpdatePrivateKeyTagResult"
        createSubOrganizationResult:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResult"
        updateAllowedOriginsResult:
          "$ref": "#/components/schemas/v1UpdateAllowedOriginsResult"
        createPrivateKeysResultV2:
          "$ref": "#/components/schemas/v1CreatePrivateKeysResultV2"
        updateUserResult:
          "$ref": "#/components/schemas/v1UpdateUserResult"
        updatePolicyResult:
          "$ref": "#/components/schemas/v1UpdatePolicyResult"
        createSubOrganizationResultV3:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResultV3"
        createWalletResult:
          "$ref": "#/components/schemas/v1CreateWalletResult"
        createWalletAccountsResult:
          "$ref": "#/components/schemas/v1CreateWalletAccountsResult"
        initUserEmailRecoveryResult:
          "$ref": "#/components/schemas/v1InitUserEmailRecoveryResult"
        recoverUserResult:
          "$ref": "#/components/schemas/v1RecoverUserResult"
        setOrganizationFeatureResult:
          "$ref": "#/components/schemas/v1SetOrganizationFeatureResult"
        removeOrganizationFeatureResult:
          "$ref": "#/components/schemas/v1RemoveOrganizationFeatureResult"
        exportPrivateKeyResult:
          "$ref": "#/components/schemas/v1ExportPrivateKeyResult"
        exportWalletResult:
          "$ref": "#/components/schemas/v1ExportWalletResult"
        createSubOrganizationResultV4:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResultV4"
        emailAuthResult:
          "$ref": "#/components/schemas/v1EmailAuthResult"
        exportWalletAccountResult:
          "$ref": "#/components/schemas/v1ExportWalletAccountResult"
        initImportWalletResult:
          "$ref": "#/components/schemas/v1InitImportWalletResult"
        importWalletResult:
          "$ref": "#/components/schemas/v1ImportWalletResult"
        initImportPrivateKeyResult:
          "$ref": "#/components/schemas/v1InitImportPrivateKeyResult"
        importPrivateKeyResult:
          "$ref": "#/components/schemas/v1ImportPrivateKeyResult"
        createPoliciesResult:
          "$ref": "#/components/schemas/v1CreatePoliciesResult"
        signRawPayloadsResult:
          "$ref": "#/components/schemas/v1SignRawPayloadsResult"
        createReadOnlySessionResult:
          "$ref": "#/components/schemas/v1CreateReadOnlySessionResult"
        createOauthProvidersResult:
          "$ref": "#/components/schemas/v1CreateOauthProvidersResult"
        deleteOauthProvidersResult:
          "$ref": "#/components/schemas/v1DeleteOauthProvidersResult"
        createSubOrganizationResultV5:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResultV5"
        oauthResult:
          "$ref": "#/components/schemas/v1OauthResult"
        createReadWriteSessionResult:
          "$ref": "#/components/schemas/v1CreateReadWriteSessionResult"
        createSubOrganizationResultV6:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResultV6"
        deletePrivateKeysResult:
          "$ref": "#/components/schemas/v1DeletePrivateKeysResult"
        deleteWalletsResult:
          "$ref": "#/components/schemas/v1DeleteWalletsResult"
        createReadWriteSessionResultV2:
          "$ref": "#/components/schemas/v1CreateReadWriteSessionResultV2"
        deleteSubOrganizationResult:
          "$ref": "#/components/schemas/v1DeleteSubOrganizationResult"
        initOtpAuthResult:
          "$ref": "#/components/schemas/v1InitOtpAuthResult"
        otpAuthResult:
          "$ref": "#/components/schemas/v1OtpAuthResult"
        createSubOrganizationResultV7:
          "$ref": "#/components/schemas/v1CreateSubOrganizationResultV7"
    v1RootUserParams:
      required:
      - apiKeys
      - authenticators
      - userName
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
    v1RootUserParamsV2:
      required:
      - apiKeys
      - authenticators
      - oauthProviders
      - userName
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        oauthProviders:
          type: array
          description: A list of Oauth providers.
          items:
            "$ref": "#/components/schemas/v1OauthProviderParams"
    v1RootUserParamsV3:
      required:
      - apiKeys
      - authenticators
      - oauthProviders
      - userName
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/v1ApiKeyParamsV2"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        oauthProviders:
          type: array
          description: A list of Oauth providers.
          items:
            "$ref": "#/components/schemas/v1OauthProviderParams"
    v1RootUserParamsV4:
      required:
      - apiKeys
      - authenticators
      - oauthProviders
      - userName
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        userPhoneNumber:
          type: string
          description: The user's phone number in E.164 format e.g. +13214567890
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/v1ApiKeyParamsV2"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        oauthProviders:
          type: array
          description: A list of Oauth providers.
          items:
            "$ref": "#/components/schemas/v1OauthProviderParams"
    v1Selector:
      type: object
      properties:
        subject:
          type: string
        operator:
          "$ref": "#/components/schemas/v1Operator"
        target:
          type: string
    v1SelectorV2:
      type: object
      properties:
        subject:
          type: string
        operator:
          "$ref": "#/components/schemas/v1Operator"
        targets:
          type: array
          items:
            type: string
    v1SetOrganizationFeatureIntent:
      required:
      - name
      - value
      type: object
      properties:
        name:
          "$ref": "#/components/schemas/v1FeatureName"
        value:
          type: string
          description: Optional value for the feature. Will override existing values
            if feature is already set.
    v1SetOrganizationFeatureRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_SET_ORGANIZATION_FEATURE
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1SetOrganizationFeatureIntent"
    v1SetOrganizationFeatureResult:
      required:
      - features
      type: object
      properties:
        features:
          type: array
          description: Resulting list of organization features.
          items:
            "$ref": "#/components/schemas/v1Feature"
    v1SignRawPayloadIntent:
      required:
      - encoding
      - hashFunction
      - payload
      - privateKeyId
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
        payload:
          type: string
          description: Raw unsigned payload to be signed.
        encoding:
          "$ref": "#/components/schemas/v1PayloadEncoding"
        hashFunction:
          "$ref": "#/components/schemas/v1HashFunction"
    v1SignRawPayloadIntentV2:
      required:
      - encoding
      - hashFunction
      - payload
      - signWith
      type: object
      properties:
        signWith:
          type: string
          description: A Wallet account address, Private Key address, or Private Key
            identifier.
        payload:
          type: string
          description: Raw unsigned payload to be signed.
        encoding:
          "$ref": "#/components/schemas/v1PayloadEncoding"
        hashFunction:
          "$ref": "#/components/schemas/v1HashFunction"
    v1SignRawPayloadRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_SIGN_RAW_PAYLOAD_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1SignRawPayloadIntentV2"
    v1SignRawPayloadResult:
      required:
      - r
      - s
      - v
      type: object
      properties:
        r:
          type: string
          description: Component of an ECSDA signature.
        s:
          type: string
          description: Component of an ECSDA signature.
        v:
          type: string
          description: Component of an ECSDA signature.
    v1SignRawPayloadsIntent:
      required:
      - encoding
      - hashFunction
      - payloads
      - signWith
      type: object
      properties:
        signWith:
          type: string
          description: A Wallet account address, Private Key address, or Private Key
            identifier.
        payloads:
          type: array
          description: An array of raw unsigned payloads to be signed.
          items:
            type: string
        encoding:
          "$ref": "#/components/schemas/v1PayloadEncoding"
        hashFunction:
          "$ref": "#/components/schemas/v1HashFunction"
    v1SignRawPayloadsRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_SIGN_RAW_PAYLOADS
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1SignRawPayloadsIntent"
    v1SignRawPayloadsResult:
      type: object
      properties:
        signatures:
          type: array
          items:
            "$ref": "#/components/schemas/v1SignRawPayloadResult"
    v1SignTransactionIntent:
      required:
      - privateKeyId
      - type
      - unsignedTransaction
      type: object
      properties:
        privateKeyId:
          type: string
          description: Unique identifier for a given Private Key.
        unsignedTransaction:
          type: string
          description: Raw unsigned transaction to be signed by a particular Private
            Key.
        type:
          "$ref": "#/components/schemas/v1TransactionType"
    v1SignTransactionIntentV2:
      required:
      - signWith
      - type
      - unsignedTransaction
      type: object
      properties:
        signWith:
          type: string
          description: A Wallet account address, Private Key address, or Private Key
            identifier.
        unsignedTransaction:
          type: string
          description: Raw unsigned transaction to be signed
        type:
          "$ref": "#/components/schemas/v1TransactionType"
    v1SignTransactionRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_SIGN_TRANSACTION_V2
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1SignTransactionIntentV2"
    v1SignTransactionResult:
      required:
      - signedTransaction
      type: object
      properties:
        signedTransaction:
          type: string
    v1SimpleClientExtensionResults:
      type: object
      properties:
        appid:
          type: boolean
        appidExclude:
          type: boolean
        credProps:
          "$ref": "#/components/schemas/v1CredPropsAuthenticationExtensionsClientOutputs"
    v1TagType:
      type: string
      enum:
      - TAG_TYPE_USER
      - TAG_TYPE_PRIVATE_KEY
    v1TransactionType:
      type: string
      enum:
      - TRANSACTION_TYPE_ETHEREUM
      - TRANSACTION_TYPE_SOLANA
    v1UpdateAllowedOriginsIntent:
      required:
      - allowedOrigins
      type: object
      properties:
        allowedOrigins:
          type: array
          description: Additional origins requests are allowed from besides Turnkey
            origins
          items:
            type: string
    v1UpdateAllowedOriginsResult:
      type: object
    v1UpdatePolicyIntent:
      required:
      - policyId
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
        policyName:
          type: string
          description: Human-readable name for a Policy.
        policyEffect:
          "$ref": "#/components/schemas/v1Effect"
        policyCondition:
          type: string
          description: The condition expression that triggers the Effect (optional).
        policyConsensus:
          type: string
          description: The consensus expression that triggers the Effect (optional).
        policyNotes:
          type: string
          description: Accompanying notes for a Policy (optional).
    v1UpdatePolicyRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_UPDATE_POLICY
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1UpdatePolicyIntent"
    v1UpdatePolicyResult:
      required:
      - policyId
      type: object
      properties:
        policyId:
          type: string
          description: Unique identifier for a given Policy.
    v1UpdatePrivateKeyTagIntent:
      required:
      - addPrivateKeyIds
      - privateKeyTagId
      - removePrivateKeyIds
      type: object
      properties:
        privateKeyTagId:
          type: string
          description: Unique identifier for a given Private Key Tag.
        newPrivateKeyTagName:
          type: string
          description: The new, human-readable name for the tag with the given ID.
        addPrivateKeyIds:
          type: array
          description: A list of Private Keys IDs to add this tag to.
          items:
            type: string
        removePrivateKeyIds:
          type: array
          description: A list of Private Key IDs to remove this tag from.
          items:
            type: string
    v1UpdatePrivateKeyTagRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_UPDATE_PRIVATE_KEY_TAG
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1UpdatePrivateKeyTagIntent"
    v1UpdatePrivateKeyTagResult:
      required:
      - privateKeyTagId
      type: object
      properties:
        privateKeyTagId:
          type: string
          description: Unique identifier for a given Private Key Tag.
    v1UpdateRootQuorumIntent:
      required:
      - threshold
      - userIds
      type: object
      properties:
        threshold:
          type: integer
          description: The threshold of unique approvals to reach quorum.
          format: int32
        userIds:
          type: array
          description: The unique identifiers of users who comprise the quorum set.
          items:
            type: string
    v1UpdateRootQuorumRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_UPDATE_ROOT_QUORUM
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1UpdateRootQuorumIntent"
    v1UpdateRootQuorumResult:
      type: object
    v1UpdateUserIntent:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for a given User.
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        userTagIds:
          type: array
          description: An updated list of User Tags to apply to this User.
          items:
            type: string
        userPhoneNumber:
          type: string
          description: The user's phone number in E.164 format e.g. +13214567890
    v1UpdateUserRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_UPDATE_USER
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1UpdateUserIntent"
    v1UpdateUserResult:
      required:
      - userId
      type: object
      properties:
        userId:
          type: string
          description: A User ID.
    v1UpdateUserTagIntent:
      required:
      - addUserIds
      - removeUserIds
      - userTagId
      type: object
      properties:
        userTagId:
          type: string
          description: Unique identifier for a given User Tag.
        newUserTagName:
          type: string
          description: The new, human-readable name for the tag with the given ID.
        addUserIds:
          type: array
          description: A list of User IDs to add this tag to.
          items:
            type: string
        removeUserIds:
          type: array
          description: A list of User IDs to remove this tag from.
          items:
            type: string
    v1UpdateUserTagRequest:
      required:
      - organizationId
      - parameters
      - timestampMs
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - ACTIVITY_TYPE_UPDATE_USER_TAG
        timestampMs:
          type: string
          description: Timestamp (in milliseconds) of the request, used to verify
            liveness of user requests.
        organizationId:
          type: string
          description: Unique identifier for a given Organization.
        parameters:
          "$ref": "#/components/schemas/v1UpdateUserTagIntent"
    v1UpdateUserTagResult:
      required:
      - userTagId
      type: object
      properties:
        userTagId:
          type: string
          description: Unique identifier for a given User Tag.
    v1User:
      required:
      - apiKeys
      - authenticators
      - createdAt
      - oauthProviders
      - updatedAt
      - userId
      - userName
      - userTags
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for a given User.
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        userPhoneNumber:
          type: string
          description: The user's phone number in E.164 format e.g. +13214567890
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1Authenticator"
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/v1ApiKey"
        userTags:
          type: array
          description: A list of User Tag IDs.
          items:
            type: string
        oauthProviders:
          type: array
          description: A list of Oauth Providers.
          items:
            "$ref": "#/components/schemas/v1OauthProvider"
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    v1UserParams:
      required:
      - accessType
      - apiKeys
      - authenticators
      - userName
      - userTags
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        accessType:
          "$ref": "#/components/schemas/v1AccessType"
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParams"
        userTags:
          type: array
          description: A list of User Tag IDs.
          items:
            type: string
    v1UserParamsV2:
      required:
      - apiKeys
      - authenticators
      - userName
      - userTags
      type: object
      properties:
        userName:
          type: string
          description: Human-readable name for a User.
        userEmail:
          type: string
          description: The user's email address.
        apiKeys:
          type: array
          description: A list of API Key parameters.
          items:
            "$ref": "#/components/schemas/apiApiKeyParams"
        authenticators:
          type: array
          description: A list of Authenticator parameters.
          items:
            "$ref": "#/components/schemas/v1AuthenticatorParamsV2"
        userTags:
          type: array
          description: A list of User Tag IDs.
          items:
            type: string
    v1Vote:
      required:
      - activityId
      - createdAt
      - id
      - message
      - publicKey
      - scheme
      - selection
      - signature
      - user
      - userId
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for a given Vote object.
        userId:
          type: string
          description: Unique identifier for a given User.
        user:
          "$ref": "#/components/schemas/v1User"
        activityId:
          type: string
          description: Unique identifier for a given Activity object.
        selection:
          type: string
          enum:
          - VOTE_SELECTION_APPROVED
          - VOTE_SELECTION_REJECTED
        message:
          type: string
          description: The raw message being signed within a Vote.
        publicKey:
          type: string
          description: The public component of a cryptographic key pair used to sign
            messages and transactions.
        signature:
          type: string
          description: The signature applied to a particular vote.
        scheme:
          type: string
          description: Method used to produce a signature.
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    v1Wallet:
      required:
      - createdAt
      - exported
      - imported
      - updatedAt
      - walletId
      - walletName
      type: object
      properties:
        walletId:
          type: string
          description: Unique identifier for a given Wallet.
        walletName:
          type: string
          description: Human-readable name for a Wallet.
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        exported:
          type: boolean
          description: True when a given Wallet is exported, false otherwise.
        imported:
          type: boolean
          description: True when a given Wallet is imported, false otherwise.
    v1WalletAccount:
      required:
      - address
      - addressFormat
      - createdAt
      - curve
      - organizationId
      - path
      - pathFormat
      - updatedAt
      - walletId
      type: object
      properties:
        organizationId:
          type: string
          description: The Organization the Account belongs to.
        walletId:
          type: string
          description: The Wallet the Account was derived from.
        curve:
          "$ref": "#/components/schemas/v1Curve"
        pathFormat:
          "$ref": "#/components/schemas/v1PathFormat"
        path:
          type: string
          description: Path used to generate the Account.
        addressFormat:
          "$ref": "#/components/schemas/v1AddressFormat"
        address:
          type: string
          description: Address generated using the Wallet seed and Account parameters.
        createdAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
        updatedAt:
          "$ref": "#/components/schemas/externaldatav1Timestamp"
    v1WalletAccountParams:
      required:
      - addressFormat
      - curve
      - path
      - pathFormat
      type: object
      properties:
        curve:
          "$ref": "#/components/schemas/v1Curve"
        pathFormat:
          "$ref": "#/components/schemas/v1PathFormat"
        path:
          type: string
          description: Path used to generate a wallet Account.
        addressFormat:
          "$ref": "#/components/schemas/v1AddressFormat"
    v1WalletParams:
      required:
      - accounts
      - walletName
      type: object
      properties:
        walletName:
          type: string
          description: Human-readable name for a Wallet.
        accounts:
          type: array
          description: A list of wallet Accounts.
          items:
            "$ref": "#/components/schemas/v1WalletAccountParams"
        mnemonicLength:
          type: integer
          description: 'Length of mnemonic to generate the Wallet seed. Defaults to
            12. Accepted values: 12, 15, 18, 21, 24.'
          format: int32
    v1WalletResult:
      required:
      - addresses
      - walletId
      type: object
      properties:
        walletId:
          type: string
        addresses:
          type: array
          description: A list of account addresses.
          items:
            type: string
    v1WebAuthnStamp:
      required:
      - authenticatorData
      - clientDataJson
      - credentialId
      - signature
      type: object
      properties:
        credentialId:
          type: string
          description: A base64 url encoded Unique identifier for a given credential.
        clientDataJson:
          type: string
          description: A base64 encoded payload containing metadata about the signing
            context and the challenge.
        authenticatorData:
          type: string
          description: A base64 encoded payload containing metadata about the authenticator.
        signature:
          type: string
          description: The base64 url encoded signature bytes contained within the
            WebAuthn assertion response.
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-Stamp
      in: header
    AuthenticatorAuth:
      type: apiKey
      name: X-Stamp-WebAuthn
      in: header
x-tagGroups:
- name: ORGANIZATIONS
  tags:
  - Organizations
  - Invitations
  - Policies
  - Features
- name: WALLETS AND PRIVATE KEYS
  tags:
  - Wallets
  - Signing
  - Private Keys
  - Private Key Tags
- name: USERS
  tags:
  - Users
  - User Tags
  - User Recovery
  - User Auth
- name: CREDENTIALS
  tags:
  - Authenticators
  - API Keys
  - Sessions
- name: ACTIVITIES
  tags:
  - Activities
  - Consensus
x-original-swagger-version: '2.0'
